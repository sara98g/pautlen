Terminales no usados en la gramática

   TOK_FLECHA
   TOK_ERROR
   TOK_FOR
   TOK_SWITCH
   TOK_CASE
   TOK_DEFAULT
   TOK_FLOAT
   TOK_MALLOC
   TOK_CPRINTF
   TOK_FREE
   TOK_SET
   TOK_OF
   TOK_UNION
   TOK_INTERSECTION
   TOK_ADD
   TOK_CLEAR
   TOK_SIZE
   TOK_CONTAINS
   TOK_CONSTANTE_REAL


Gramática

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin
    2         | TOK_MAIN '{' funciones sentencias '}'

    3 iniciar_codigo: %empty

    4 escribir_variables: %empty

    5 inicio_main: %empty

    6 escribir_fin: %empty

    7 declaraciones: declaracion declaraciones
    8              | declaracion

    9 declaracion: modificadores_acceso clase identificadores ';'
   10            | modificadores_acceso declaracion_clase ';'

   11 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE
   12                     | TOK_SECRET TOK_UNIQUE
   13                     | TOK_EXPOSED TOK_UNIQUE
   14                     | TOK_HIDDEN
   15                     | TOK_SECRET
   16                     | TOK_EXPOSED
   17                     | TOK_UNIQUE
   18                     | %empty

   19 clase: clase_escalar
   20      | clase_vector
   21      | clase_objeto

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   23                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

   24 modificadores_clase: %empty

   25 clase_escalar: tipo

   26 tipo: TOK_INT
   27     | TOK_BOOLEAN

   28 clase_objeto: '{' TOK_IDENTIFICADOR '}'

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ']'
   30             | TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']'

   31 identificadores: identificador
   32                | identificador ',' identificadores

   33 funciones: funcion funciones
   34          | %empty

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

   36 tipo_retorno: TOK_NONE
   37             | tipo
   38             | clase_objeto

   39 parametros_funcion: parametro_funcion resto_parametros_funcion
   40                   | %empty

   41 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   42                         | %empty

   43 parametro_funcion: tipo TOK_IDENTIFICADOR
   44                  | clase_objeto TOK_IDENTIFICADOR

   45 declaraciones_funcion: declaraciones
   46                      | %empty

   47 sentencias: sentencia
   48           | sentencia sentencias

   49 sentencia: sentencia_simple ';'
   50          | bloque

   51 sentencia_simple: asignacion
   52                 | lectura
   53                 | escritura
   54                 | retorno_funcion
   55                 | identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   56                 | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   57                 | destruir_objeto

   58 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR

   59 bloque: condicional
   60       | bucle

   61 asignacion: TOK_IDENTIFICADOR '=' exp
   62           | elemento_vector '=' exp
   63           | elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   64           | TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   65           | identificador_clase '.' TOK_IDENTIFICADOR '=' exp

   66 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   67 condicional: if_exp ')' '{' sentencias '}'
   68            | if_exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

   69 if_exp: TOK_IF '(' exp

   70 bucle: while_exp sentencias '}'

   71 while_exp: while exp ')' '{'

   72 while: TOK_WHILE '('

   73 lectura: TOK_SCANF TOK_IDENTIFICADOR
   74        | TOK_SCANF elemento_vector

   75 escritura: TOK_PRINTF exp

   76 retorno_funcion: TOK_RETURN exp
   77                | TOK_RETURN TOK_NONE

   78 exp: exp '+' exp
   79    | exp '-' exp
   80    | exp '/' exp
   81    | exp '*' exp
   82    | '-' exp
   83    | exp TOK_AND exp
   84    | exp TOK_OR exp
   85    | '!' exp
   86    | TOK_IDENTIFICADOR
   87    | constante
   88    | '(' exp ')'
   89    | '(' comparacion ')'
   90    | elemento_vector
   91    | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   92    | identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')'
   93    | identificador_clase TOK_IDENTIFICADOR

   94 identificador_clase: TOK_IDENTIFICADOR
   95                    | TOK_ITSELF

   96 lista_expresiones: exp resto_lista_expresiones
   97                  | %empty

   98 resto_lista_expresiones: ',' exp resto_lista_expresiones
   99                        | %empty

  100 comparacion: exp TOK_IGUAL exp
  101            | exp TOK_DISTINTO exp
  102            | exp TOK_MENORIGUAL exp
  103            | exp TOK_MAYORIGUAL exp
  104            | exp '<' exp
  105            | exp '>' exp

  106 constante: constante_logica
  107          | constante_entera

  108 constante_logica: TOK_TRUE
  109                 | TOK_FALSE

  110 constante_entera: TOK_CONSTANTE_ENTERA

  111 identificador: TOK_IDENTIFICADOR


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 85
'(' (40) 35 55 56 63 64 69 72 88 89 91 92
')' (41) 35 55 56 63 64 67 68 71 88 89 91 92
'*' (42) 81
'+' (43) 78
',' (44) 30 32 98
'-' (45) 79 82
'.' (46) 55 65
'/' (47) 80
';' (59) 9 10 41 49
'<' (60) 104
'=' (61) 61 62 63 64 65
'>' (62) 105
'[' (91) 29 30 66
']' (93) 29 30 66
'{' (123) 1 2 22 23 28 35 67 68 71
'}' (125) 1 2 22 23 28 35 67 68 70
error (256)
TOK_IDENTIFICADOR (258) 22 23 28 35 43 44 55 56 58 61 63 64 65 66 73
    86 91 92 93 94 111
TOK_CONSTANTE_ENTERA (259) 110
TOK_NONE (260) 36 77
TOK_CLASS (261) 22 23
TOK_INHERITS (262) 22
TOK_INSTANCE_OF (263) 63 64
TOK_DISCARD (264) 58
TOK_ITSELF (265) 95
TOK_FLECHA (266)
TOK_HIDDEN (267) 11 14
TOK_SECRET (268) 12 15
TOK_EXPOSED (269) 13 16
TOK_UNIQUE (270) 11 12 13 17
TOK_FUNCTION (271) 35
TOK_RETURN (272) 76 77
TOK_MAIN (273) 1 2
TOK_INT (274) 26
TOK_BOOLEAN (275) 27
TOK_ARRAY (276) 29 30
TOK_IF (277) 69
TOK_ELSE (278) 68
TOK_WHILE (279) 72
TOK_SCANF (280) 73 74
TOK_PRINTF (281) 75
TOK_IGUAL (282) 100
TOK_DISTINTO (283) 101
TOK_MENORIGUAL (284) 102
TOK_MAYORIGUAL (285) 103
TOK_OR (286) 84
TOK_AND (287) 83
TOK_FALSE (288) 109
TOK_TRUE (289) 108
TOK_ERROR (290)
TOK_FOR (291)
TOK_SWITCH (292)
TOK_CASE (293)
TOK_DEFAULT (294)
TOK_FLOAT (295)
TOK_MALLOC (296)
TOK_CPRINTF (297)
TOK_FREE (298)
TOK_SET (299)
TOK_OF (300)
TOK_UNION (301)
TOK_INTERSECTION (302)
TOK_ADD (303)
TOK_CLEAR (304)
TOK_SIZE (305)
TOK_CONTAINS (306)
TOK_CONSTANTE_REAL (307)
NEG (308)


No terminales con las reglas donde aparecen

$accept (71)
    en la izquierda: 0
programa (72)
    en la izquierda: 1 2, en la derecha: 0
iniciar_codigo (73)
    en la izquierda: 3, en la derecha: 1
escribir_variables (74)
    en la izquierda: 4, en la derecha: 1
inicio_main (75)
    en la izquierda: 5, en la derecha: 1
escribir_fin (76)
    en la izquierda: 6, en la derecha: 1
declaraciones (77)
    en la izquierda: 7 8, en la derecha: 1 7 22 23 45
declaracion (78)
    en la izquierda: 9 10, en la derecha: 7 8
modificadores_acceso (79)
    en la izquierda: 11 12 13 14 15 16 17 18, en la derecha: 9 10 35
clase (80)
    en la izquierda: 19 20 21, en la derecha: 9
declaracion_clase (81)
    en la izquierda: 22 23, en la derecha: 10
modificadores_clase (82)
    en la izquierda: 24, en la derecha: 22 23
clase_escalar (83)
    en la izquierda: 25, en la derecha: 19
tipo (84)
    en la izquierda: 26 27, en la derecha: 25 29 30 37 43
clase_objeto (85)
    en la izquierda: 28, en la derecha: 21 38 44
clase_vector (86)
    en la izquierda: 29 30, en la derecha: 20
identificadores (87)
    en la izquierda: 31 32, en la derecha: 9 22 32
funciones (88)
    en la izquierda: 33 34, en la derecha: 1 2 22 23 33
funcion (89)
    en la izquierda: 35, en la derecha: 33
tipo_retorno (90)
    en la izquierda: 36 37 38, en la derecha: 35
parametros_funcion (91)
    en la izquierda: 39 40, en la derecha: 35
resto_parametros_funcion (92)
    en la izquierda: 41 42, en la derecha: 39 41
parametro_funcion (93)
    en la izquierda: 43 44, en la derecha: 39 41
declaraciones_funcion (94)
    en la izquierda: 45 46, en la derecha: 35
sentencias (95)
    en la izquierda: 47 48, en la derecha: 1 2 35 48 67 68 70
sentencia (96)
    en la izquierda: 49 50, en la derecha: 47 48
sentencia_simple (97)
    en la izquierda: 51 52 53 54 55 56 57, en la derecha: 49
destruir_objeto (98)
    en la izquierda: 58, en la derecha: 57
bloque (99)
    en la izquierda: 59 60, en la derecha: 50
asignacion (100)
    en la izquierda: 61 62 63 64 65, en la derecha: 51
elemento_vector (101)
    en la izquierda: 66, en la derecha: 62 63 74 90
condicional (102)
    en la izquierda: 67 68, en la derecha: 59
if_exp (103)
    en la izquierda: 69, en la derecha: 67 68
bucle (104)
    en la izquierda: 70, en la derecha: 60
while_exp (105)
    en la izquierda: 71, en la derecha: 70
while (106)
    en la izquierda: 72, en la derecha: 71
lectura (107)
    en la izquierda: 73 74, en la derecha: 52
escritura (108)
    en la izquierda: 75, en la derecha: 53
retorno_funcion (109)
    en la izquierda: 76 77, en la derecha: 54
exp (110)
    en la izquierda: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93,
    en la derecha: 61 62 65 66 69 71 75 76 78 79 80 81 82 83 84 85
    88 96 98 100 101 102 103 104 105
identificador_clase (111)
    en la izquierda: 94 95, en la derecha: 55 65 92 93
lista_expresiones (112)
    en la izquierda: 96 97, en la derecha: 55 56 63 64 91 92
resto_lista_expresiones (113)
    en la izquierda: 98 99, en la derecha: 96 98
comparacion (114)
    en la izquierda: 100 101 102 103 104 105, en la derecha: 89
constante (115)
    en la izquierda: 106 107, en la derecha: 87
constante_logica (116)
    en la izquierda: 108 109, en la derecha: 106
constante_entera (117)
    en la izquierda: 110, en la derecha: 29 30 107
identificador (118)
    en la izquierda: 111, en la derecha: 31 32


Estado 0

    0 $accept: . programa $end

    TOK_MAIN  desplazar e ir al estado 1

    programa  ir al estado 2


Estado 1

    1 programa: TOK_MAIN . '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin
    2         | TOK_MAIN . '{' funciones sentencias '}'

    '{'  desplazar e ir al estado 3


Estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 4


Estado 3

    1 programa: TOK_MAIN '{' . declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin
    2         | TOK_MAIN '{' . funciones sentencias '}'

    TOK_HIDDEN    desplazar e ir al estado 5
    TOK_SECRET    desplazar e ir al estado 6
    TOK_EXPOSED   desplazar e ir al estado 7
    TOK_UNIQUE    desplazar e ir al estado 8
    TOK_FUNCTION  desplazar e ir al estado 9

    TOK_CLASS    reduce usando la regla 18 (modificadores_acceso)
    TOK_INT      reduce usando la regla 18 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 18 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 18 (modificadores_acceso)
    '{'          reduce usando la regla 18 (modificadores_acceso)
    $default     reduce usando la regla 34 (funciones)

    declaraciones         ir al estado 10
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12
    funciones             ir al estado 13
    funcion               ir al estado 14


Estado 4

    0 $accept: programa $end .

    $default  aceptar


Estado 5

   11 modificadores_acceso: TOK_HIDDEN . TOK_UNIQUE
   14                     | TOK_HIDDEN .

    TOK_UNIQUE  desplazar e ir al estado 15

    $default  reduce usando la regla 14 (modificadores_acceso)


Estado 6

   12 modificadores_acceso: TOK_SECRET . TOK_UNIQUE
   15                     | TOK_SECRET .

    TOK_UNIQUE  desplazar e ir al estado 16

    $default  reduce usando la regla 15 (modificadores_acceso)


Estado 7

   13 modificadores_acceso: TOK_EXPOSED . TOK_UNIQUE
   16                     | TOK_EXPOSED .

    TOK_UNIQUE  desplazar e ir al estado 17

    $default  reduce usando la regla 16 (modificadores_acceso)


Estado 8

   17 modificadores_acceso: TOK_UNIQUE .

    $default  reduce usando la regla 17 (modificadores_acceso)


Estado 9

   35 funcion: TOK_FUNCTION . modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    $default  reduce usando la regla 18 (modificadores_acceso)

    modificadores_acceso  ir al estado 18


Estado 10

    1 programa: TOK_MAIN '{' declaraciones . iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin

    $default  reduce usando la regla 3 (iniciar_codigo)

    iniciar_codigo  ir al estado 19


Estado 11

    7 declaraciones: declaracion . declaraciones
    8              | declaracion .

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    TOK_CLASS    reduce usando la regla 18 (modificadores_acceso)
    TOK_INT      reduce usando la regla 18 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 18 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 18 (modificadores_acceso)
    '{'          reduce usando la regla 18 (modificadores_acceso)
    $default     reduce usando la regla 8 (declaraciones)

    declaraciones         ir al estado 20
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12


Estado 12

    9 declaracion: modificadores_acceso . clase identificadores ';'
   10            | modificadores_acceso . declaracion_clase ';'

    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22
    TOK_ARRAY    desplazar e ir al estado 23
    '{'          desplazar e ir al estado 24

    $default  reduce usando la regla 24 (modificadores_clase)

    clase                ir al estado 25
    declaracion_clase    ir al estado 26
    modificadores_clase  ir al estado 27
    clase_escalar        ir al estado 28
    tipo                 ir al estado 29
    clase_objeto         ir al estado 30
    clase_vector         ir al estado 31


Estado 13

    2 programa: TOK_MAIN '{' funciones . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 32
    TOK_DISCARD        desplazar e ir al estado 33
    TOK_ITSELF         desplazar e ir al estado 34
    TOK_RETURN         desplazar e ir al estado 35
    TOK_IF             desplazar e ir al estado 36
    TOK_WHILE          desplazar e ir al estado 37
    TOK_SCANF          desplazar e ir al estado 38
    TOK_PRINTF         desplazar e ir al estado 39

    sentencias           ir al estado 40
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    if_exp               ir al estado 48
    bucle                ir al estado 49
    while_exp            ir al estado 50
    while                ir al estado 51
    lectura              ir al estado 52
    escritura            ir al estado 53
    retorno_funcion      ir al estado 54
    identificador_clase  ir al estado 55


Estado 14

   33 funciones: funcion . funciones

    TOK_FUNCTION  desplazar e ir al estado 9

    $default  reduce usando la regla 34 (funciones)

    funciones  ir al estado 56
    funcion    ir al estado 14


Estado 15

   11 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE .

    $default  reduce usando la regla 11 (modificadores_acceso)


Estado 16

   12 modificadores_acceso: TOK_SECRET TOK_UNIQUE .

    $default  reduce usando la regla 12 (modificadores_acceso)


Estado 17

   13 modificadores_acceso: TOK_EXPOSED TOK_UNIQUE .

    $default  reduce usando la regla 13 (modificadores_acceso)


Estado 18

   35 funcion: TOK_FUNCTION modificadores_acceso . tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_NONE     desplazar e ir al estado 57
    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22
    '{'          desplazar e ir al estado 24

    tipo          ir al estado 58
    clase_objeto  ir al estado 59
    tipo_retorno  ir al estado 60


Estado 19

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo . escribir_variables funciones inicio_main sentencias '}' escribir_fin

    $default  reduce usando la regla 4 (escribir_variables)

    escribir_variables  ir al estado 61


Estado 20

    7 declaraciones: declaracion declaraciones .

    $default  reduce usando la regla 7 (declaraciones)


Estado 21

   26 tipo: TOK_INT .

    $default  reduce usando la regla 26 (tipo)


Estado 22

   27 tipo: TOK_BOOLEAN .

    $default  reduce usando la regla 27 (tipo)


Estado 23

   29 clase_vector: TOK_ARRAY . tipo '[' constante_entera ']'
   30             | TOK_ARRAY . tipo '[' constante_entera ',' constante_entera ']'

    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22

    tipo  ir al estado 62


Estado 24

   28 clase_objeto: '{' . TOK_IDENTIFICADOR '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 63


Estado 25

    9 declaracion: modificadores_acceso clase . identificadores ';'

    TOK_IDENTIFICADOR  desplazar e ir al estado 64

    identificadores  ir al estado 65
    identificador    ir al estado 66


Estado 26

   10 declaracion: modificadores_acceso declaracion_clase . ';'

    ';'  desplazar e ir al estado 67


Estado 27

   22 declaracion_clase: modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   23                  | modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_CLASS  desplazar e ir al estado 68


Estado 28

   19 clase: clase_escalar .

    $default  reduce usando la regla 19 (clase)


Estado 29

   25 clase_escalar: tipo .

    $default  reduce usando la regla 25 (clase_escalar)


Estado 30

   21 clase: clase_objeto .

    $default  reduce usando la regla 21 (clase)


Estado 31

   20 clase: clase_vector .

    $default  reduce usando la regla 20 (clase)


Estado 32

   56 sentencia_simple: TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   61 asignacion: TOK_IDENTIFICADOR . '=' exp
   64           | TOK_IDENTIFICADOR . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   66 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   94 identificador_clase: TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 69
    '('  desplazar e ir al estado 70
    '='  desplazar e ir al estado 71

    $default  reduce usando la regla 94 (identificador_clase)


Estado 33

   58 destruir_objeto: TOK_DISCARD . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 72


Estado 34

   95 identificador_clase: TOK_ITSELF .

    $default  reduce usando la regla 95 (identificador_clase)


Estado 35

   76 retorno_funcion: TOK_RETURN . exp
   77                | TOK_RETURN . TOK_NONE

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_NONE              desplazar e ir al estado 75
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 82
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 36

   69 if_exp: TOK_IF . '(' exp

    '('  desplazar e ir al estado 87


Estado 37

   72 while: TOK_WHILE . '('

    '('  desplazar e ir al estado 88


Estado 38

   73 lectura: TOK_SCANF . TOK_IDENTIFICADOR
   74        | TOK_SCANF . elemento_vector

    TOK_IDENTIFICADOR  desplazar e ir al estado 89

    elemento_vector  ir al estado 90


Estado 39

   75 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 91
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 40

    2 programa: TOK_MAIN '{' funciones sentencias . '}'

    '}'  desplazar e ir al estado 92


Estado 41

   47 sentencias: sentencia .
   48           | sentencia . sentencias

    TOK_IDENTIFICADOR  desplazar e ir al estado 32
    TOK_DISCARD        desplazar e ir al estado 33
    TOK_ITSELF         desplazar e ir al estado 34
    TOK_RETURN         desplazar e ir al estado 35
    TOK_IF             desplazar e ir al estado 36
    TOK_WHILE          desplazar e ir al estado 37
    TOK_SCANF          desplazar e ir al estado 38
    TOK_PRINTF         desplazar e ir al estado 39

    $default  reduce usando la regla 47 (sentencias)

    sentencias           ir al estado 93
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    if_exp               ir al estado 48
    bucle                ir al estado 49
    while_exp            ir al estado 50
    while                ir al estado 51
    lectura              ir al estado 52
    escritura            ir al estado 53
    retorno_funcion      ir al estado 54
    identificador_clase  ir al estado 55


Estado 42

   49 sentencia: sentencia_simple . ';'

    ';'  desplazar e ir al estado 94


Estado 43

   57 sentencia_simple: destruir_objeto .

    $default  reduce usando la regla 57 (sentencia_simple)


Estado 44

   50 sentencia: bloque .

    $default  reduce usando la regla 50 (sentencia)


Estado 45

   51 sentencia_simple: asignacion .

    $default  reduce usando la regla 51 (sentencia_simple)


Estado 46

   62 asignacion: elemento_vector . '=' exp
   63           | elemento_vector . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    '='  desplazar e ir al estado 95


Estado 47

   59 bloque: condicional .

    $default  reduce usando la regla 59 (bloque)


Estado 48

   67 condicional: if_exp . ')' '{' sentencias '}'
   68            | if_exp . ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    ')'  desplazar e ir al estado 96


Estado 49

   60 bloque: bucle .

    $default  reduce usando la regla 60 (bloque)


Estado 50

   70 bucle: while_exp . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 32
    TOK_DISCARD        desplazar e ir al estado 33
    TOK_ITSELF         desplazar e ir al estado 34
    TOK_RETURN         desplazar e ir al estado 35
    TOK_IF             desplazar e ir al estado 36
    TOK_WHILE          desplazar e ir al estado 37
    TOK_SCANF          desplazar e ir al estado 38
    TOK_PRINTF         desplazar e ir al estado 39

    sentencias           ir al estado 97
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    if_exp               ir al estado 48
    bucle                ir al estado 49
    while_exp            ir al estado 50
    while                ir al estado 51
    lectura              ir al estado 52
    escritura            ir al estado 53
    retorno_funcion      ir al estado 54
    identificador_clase  ir al estado 55


Estado 51

   71 while_exp: while . exp ')' '{'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 98
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 52

   52 sentencia_simple: lectura .

    $default  reduce usando la regla 52 (sentencia_simple)


Estado 53

   53 sentencia_simple: escritura .

    $default  reduce usando la regla 53 (sentencia_simple)


Estado 54

   54 sentencia_simple: retorno_funcion .

    $default  reduce usando la regla 54 (sentencia_simple)


Estado 55

   55 sentencia_simple: identificador_clase . '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   65 asignacion: identificador_clase . '.' TOK_IDENTIFICADOR '=' exp

    '.'  desplazar e ir al estado 99


Estado 56

   33 funciones: funcion funciones .

    $default  reduce usando la regla 33 (funciones)


Estado 57

   36 tipo_retorno: TOK_NONE .

    $default  reduce usando la regla 36 (tipo_retorno)


Estado 58

   37 tipo_retorno: tipo .

    $default  reduce usando la regla 37 (tipo_retorno)


Estado 59

   38 tipo_retorno: clase_objeto .

    $default  reduce usando la regla 38 (tipo_retorno)


Estado 60

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno . TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 100


Estado 61

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables . funciones inicio_main sentencias '}' escribir_fin

    TOK_FUNCTION  desplazar e ir al estado 9

    $default  reduce usando la regla 34 (funciones)

    funciones  ir al estado 101
    funcion    ir al estado 14


Estado 62

   29 clase_vector: TOK_ARRAY tipo . '[' constante_entera ']'
   30             | TOK_ARRAY tipo . '[' constante_entera ',' constante_entera ']'

    '['  desplazar e ir al estado 102


Estado 63

   28 clase_objeto: '{' TOK_IDENTIFICADOR . '}'

    '}'  desplazar e ir al estado 103


Estado 64

  111 identificador: TOK_IDENTIFICADOR .

    $default  reduce usando la regla 111 (identificador)


Estado 65

    9 declaracion: modificadores_acceso clase identificadores . ';'

    ';'  desplazar e ir al estado 104


Estado 66

   31 identificadores: identificador .
   32                | identificador . ',' identificadores

    ','  desplazar e ir al estado 105

    $default  reduce usando la regla 31 (identificadores)


Estado 67

   10 declaracion: modificadores_acceso declaracion_clase ';' .

    $default  reduce usando la regla 10 (declaracion)


Estado 68

   22 declaracion_clase: modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   23                  | modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 106


Estado 69

   66 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 107
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 70

   56 sentencia_simple: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    $default  reduce usando la regla 97 (lista_expresiones)

    elemento_vector      ir al estado 81
    exp                  ir al estado 108
    identificador_clase  ir al estado 83
    lista_expresiones    ir al estado 109
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 71

   61 asignacion: TOK_IDENTIFICADOR '=' . exp
   64           | TOK_IDENTIFICADOR '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_INSTANCE_OF       desplazar e ir al estado 110
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 111
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 72

   58 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR .

    $default  reduce usando la regla 58 (destruir_objeto)


Estado 73

   66 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   86 exp: TOK_IDENTIFICADOR .
   91    | TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   94 identificador_clase: TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 69
    '('  desplazar e ir al estado 112

    TOK_IDENTIFICADOR  reduce usando la regla 94 (identificador_clase)
    $default           reduce usando la regla 86 (exp)


Estado 74

  110 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce usando la regla 110 (constante_entera)


Estado 75

   77 retorno_funcion: TOK_RETURN TOK_NONE .

    $default  reduce usando la regla 77 (retorno_funcion)


Estado 76

  109 constante_logica: TOK_FALSE .

    $default  reduce usando la regla 109 (constante_logica)


Estado 77

  108 constante_logica: TOK_TRUE .

    $default  reduce usando la regla 108 (constante_logica)


Estado 78

   82 exp: '-' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 113
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 79

   85 exp: '!' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 114
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 80

   88 exp: '(' . exp ')'
   89    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 115
    identificador_clase  ir al estado 83
    comparacion          ir al estado 116
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 81

   90 exp: elemento_vector .

    $default  reduce usando la regla 90 (exp)


Estado 82

   76 retorno_funcion: TOK_RETURN exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 76 (retorno_funcion)


Estado 83

   92 exp: identificador_clase . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   93    | identificador_clase . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 123


Estado 84

   87 exp: constante .

    $default  reduce usando la regla 87 (exp)


Estado 85

  106 constante: constante_logica .

    $default  reduce usando la regla 106 (constante)


Estado 86

  107 constante: constante_entera .

    $default  reduce usando la regla 107 (constante)


Estado 87

   69 if_exp: TOK_IF '(' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 124
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 88

   72 while: TOK_WHILE '(' .

    $default  reduce usando la regla 72 (while)


Estado 89

   66 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   73 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    '['  desplazar e ir al estado 69

    $default  reduce usando la regla 73 (lectura)


Estado 90

   74 lectura: TOK_SCANF elemento_vector .

    $default  reduce usando la regla 74 (lectura)


Estado 91

   75 escritura: TOK_PRINTF exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 75 (escritura)


Estado 92

    2 programa: TOK_MAIN '{' funciones sentencias '}' .

    $default  reduce usando la regla 2 (programa)


Estado 93

   48 sentencias: sentencia sentencias .

    $default  reduce usando la regla 48 (sentencias)


Estado 94

   49 sentencia: sentencia_simple ';' .

    $default  reduce usando la regla 49 (sentencia)


Estado 95

   62 asignacion: elemento_vector '=' . exp
   63           | elemento_vector '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_INSTANCE_OF       desplazar e ir al estado 125
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 126
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 96

   67 condicional: if_exp ')' . '{' sentencias '}'
   68            | if_exp ')' . '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '{'  desplazar e ir al estado 127


Estado 97

   70 bucle: while_exp sentencias . '}'

    '}'  desplazar e ir al estado 128


Estado 98

   71 while_exp: while exp . ')' '{'
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122
    ')'      desplazar e ir al estado 129


Estado 99

   55 sentencia_simple: identificador_clase '.' . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   65 asignacion: identificador_clase '.' . TOK_IDENTIFICADOR '=' exp

    TOK_IDENTIFICADOR  desplazar e ir al estado 130


Estado 100

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR . '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    '('  desplazar e ir al estado 131


Estado 101

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones . inicio_main sentencias '}' escribir_fin

    $default  reduce usando la regla 5 (inicio_main)

    inicio_main  ir al estado 132


Estado 102

   29 clase_vector: TOK_ARRAY tipo '[' . constante_entera ']'
   30             | TOK_ARRAY tipo '[' . constante_entera ',' constante_entera ']'

    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74

    constante_entera  ir al estado 133


Estado 103

   28 clase_objeto: '{' TOK_IDENTIFICADOR '}' .

    $default  reduce usando la regla 28 (clase_objeto)


Estado 104

    9 declaracion: modificadores_acceso clase identificadores ';' .

    $default  reduce usando la regla 9 (declaracion)


Estado 105

   32 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  desplazar e ir al estado 64

    identificadores  ir al estado 134
    identificador    ir al estado 66


Estado 106

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . TOK_INHERITS identificadores '{' declaraciones funciones '}'
   23                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . '{' declaraciones funciones '}'

    TOK_INHERITS  desplazar e ir al estado 135
    '{'           desplazar e ir al estado 136


Estado 107

   66 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122
    ']'      desplazar e ir al estado 137


Estado 108

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   96 lista_expresiones: exp . resto_lista_expresiones

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122
    ','      desplazar e ir al estado 138

    $default  reduce usando la regla 99 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 139


Estado 109

   56 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 140


Estado 110

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  desplazar e ir al estado 141


Estado 111

   61 asignacion: TOK_IDENTIFICADOR '=' exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 61 (asignacion)


Estado 112

   91 exp: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    $default  reduce usando la regla 97 (lista_expresiones)

    elemento_vector      ir al estado 81
    exp                  ir al estado 108
    identificador_clase  ir al estado 83
    lista_expresiones    ir al estado 142
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 113

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   82    | '-' exp .
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    $default  reduce usando la regla 82 (exp)


Estado 114

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   85    | '!' exp .

    $default  reduce usando la regla 85 (exp)


Estado 115

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   88    | '(' exp . ')'
  100 comparacion: exp . TOK_IGUAL exp
  101            | exp . TOK_DISTINTO exp
  102            | exp . TOK_MENORIGUAL exp
  103            | exp . TOK_MAYORIGUAL exp
  104            | exp . '<' exp
  105            | exp . '>' exp

    TOK_IGUAL       desplazar e ir al estado 143
    TOK_DISTINTO    desplazar e ir al estado 144
    TOK_MENORIGUAL  desplazar e ir al estado 145
    TOK_MAYORIGUAL  desplazar e ir al estado 146
    TOK_OR          desplazar e ir al estado 117
    TOK_AND         desplazar e ir al estado 118
    '+'             desplazar e ir al estado 119
    '-'             desplazar e ir al estado 120
    '*'             desplazar e ir al estado 121
    '/'             desplazar e ir al estado 122
    ')'             desplazar e ir al estado 147
    '<'             desplazar e ir al estado 148
    '>'             desplazar e ir al estado 149


Estado 116

   89 exp: '(' comparacion . ')'

    ')'  desplazar e ir al estado 150


Estado 117

   84 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 151
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 118

   83 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 152
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 119

   78 exp: exp '+' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 153
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 120

   79 exp: exp '-' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 154
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 121

   81 exp: exp '*' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 155
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 122

   80 exp: exp '/' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 156
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 123

   92 exp: identificador_clase TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   93    | identificador_clase TOK_IDENTIFICADOR .

    '('  desplazar e ir al estado 157

    $default  reduce usando la regla 93 (exp)


Estado 124

   69 if_exp: TOK_IF '(' exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 69 (if_exp)


Estado 125

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  desplazar e ir al estado 158


Estado 126

   62 asignacion: elemento_vector '=' exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 62 (asignacion)


Estado 127

   67 condicional: if_exp ')' '{' . sentencias '}'
   68            | if_exp ')' '{' . sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 32
    TOK_DISCARD        desplazar e ir al estado 33
    TOK_ITSELF         desplazar e ir al estado 34
    TOK_RETURN         desplazar e ir al estado 35
    TOK_IF             desplazar e ir al estado 36
    TOK_WHILE          desplazar e ir al estado 37
    TOK_SCANF          desplazar e ir al estado 38
    TOK_PRINTF         desplazar e ir al estado 39

    sentencias           ir al estado 159
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    if_exp               ir al estado 48
    bucle                ir al estado 49
    while_exp            ir al estado 50
    while                ir al estado 51
    lectura              ir al estado 52
    escritura            ir al estado 53
    retorno_funcion      ir al estado 54
    identificador_clase  ir al estado 55


Estado 128

   70 bucle: while_exp sentencias '}' .

    $default  reduce usando la regla 70 (bucle)


Estado 129

   71 while_exp: while exp ')' . '{'

    '{'  desplazar e ir al estado 160


Estado 130

   55 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   65 asignacion: identificador_clase '.' TOK_IDENTIFICADOR . '=' exp

    '('  desplazar e ir al estado 161
    '='  desplazar e ir al estado 162


Estado 131

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' . parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22
    '{'          desplazar e ir al estado 24

    $default  reduce usando la regla 40 (parametros_funcion)

    tipo                ir al estado 163
    clase_objeto        ir al estado 164
    parametros_funcion  ir al estado 165
    parametro_funcion   ir al estado 166


Estado 132

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main . sentencias '}' escribir_fin

    TOK_IDENTIFICADOR  desplazar e ir al estado 32
    TOK_DISCARD        desplazar e ir al estado 33
    TOK_ITSELF         desplazar e ir al estado 34
    TOK_RETURN         desplazar e ir al estado 35
    TOK_IF             desplazar e ir al estado 36
    TOK_WHILE          desplazar e ir al estado 37
    TOK_SCANF          desplazar e ir al estado 38
    TOK_PRINTF         desplazar e ir al estado 39

    sentencias           ir al estado 167
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    if_exp               ir al estado 48
    bucle                ir al estado 49
    while_exp            ir al estado 50
    while                ir al estado 51
    lectura              ir al estado 52
    escritura            ir al estado 53
    retorno_funcion      ir al estado 54
    identificador_clase  ir al estado 55


Estado 133

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera . ']'
   30             | TOK_ARRAY tipo '[' constante_entera . ',' constante_entera ']'

    ']'  desplazar e ir al estado 168
    ','  desplazar e ir al estado 169


Estado 134

   32 identificadores: identificador ',' identificadores .

    $default  reduce usando la regla 32 (identificadores)


Estado 135

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS . identificadores '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 64

    identificadores  ir al estado 170
    identificador    ir al estado 66


Estado 136

   23 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' . declaraciones funciones '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    $default  reduce usando la regla 18 (modificadores_acceso)

    declaraciones         ir al estado 171
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12


Estado 137

   66 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce usando la regla 66 (elemento_vector)


Estado 138

   98 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 172
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 139

   96 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce usando la regla 96 (lista_expresiones)


Estado 140

   56 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 56 (sentencia_simple)


Estado 141

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 173


Estado 142

   91 exp: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 174


Estado 143

  100 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 175
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 144

  101 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 176
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 145

  102 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 177
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 146

  103 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 178
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 147

   88 exp: '(' exp ')' .

    $default  reduce usando la regla 88 (exp)


Estado 148

  104 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 179
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 149

  105 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 180
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 150

   89 exp: '(' comparacion ')' .

    $default  reduce usando la regla 89 (exp)


Estado 151

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   84    | exp TOK_OR exp .

    TOK_AND  desplazar e ir al estado 118
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 84 (exp)


Estado 152

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   83    | exp TOK_AND exp .
   84    | exp . TOK_OR exp

    $default  reduce usando la regla 83 (exp)


Estado 153

   78 exp: exp . '+' exp
   78    | exp '+' exp .
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 118
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 78 (exp)


Estado 154

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   79    | exp '-' exp .
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_AND  desplazar e ir al estado 118
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 79 (exp)


Estado 155

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   81    | exp '*' exp .
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    $default  reduce usando la regla 81 (exp)


Estado 156

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   80    | exp '/' exp .
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    $default  reduce usando la regla 80 (exp)


Estado 157

   92 exp: identificador_clase TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    $default  reduce usando la regla 97 (lista_expresiones)

    elemento_vector      ir al estado 81
    exp                  ir al estado 108
    identificador_clase  ir al estado 83
    lista_expresiones    ir al estado 181
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 158

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  desplazar e ir al estado 182


Estado 159

   67 condicional: if_exp ')' '{' sentencias . '}'
   68            | if_exp ')' '{' sentencias . '}' TOK_ELSE '{' sentencias '}'

    '}'  desplazar e ir al estado 183


Estado 160

   71 while_exp: while exp ')' '{' .

    $default  reduce usando la regla 71 (while_exp)


Estado 161

   55 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    $default  reduce usando la regla 97 (lista_expresiones)

    elemento_vector      ir al estado 81
    exp                  ir al estado 108
    identificador_clase  ir al estado 83
    lista_expresiones    ir al estado 184
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 162

   65 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    elemento_vector      ir al estado 81
    exp                  ir al estado 185
    identificador_clase  ir al estado 83
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 163

   43 parametro_funcion: tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 186


Estado 164

   44 parametro_funcion: clase_objeto . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  desplazar e ir al estado 187


Estado 165

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion . ')' '{' declaraciones_funcion sentencias '}'

    ')'  desplazar e ir al estado 188


Estado 166

   39 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 189

    $default  reduce usando la regla 42 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 190


Estado 167

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias . '}' escribir_fin

    '}'  desplazar e ir al estado 191


Estado 168

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ']' .

    $default  reduce usando la regla 29 (clase_vector)


Estado 169

   30 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' . constante_entera ']'

    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74

    constante_entera  ir al estado 192


Estado 170

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores . '{' declaraciones funciones '}'

    '{'  desplazar e ir al estado 193


Estado 171

   23 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones . funciones '}'

    TOK_FUNCTION  desplazar e ir al estado 9

    $default  reduce usando la regla 34 (funciones)

    funciones  ir al estado 194
    funcion    ir al estado 14


Estado 172

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   98 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122
    ','      desplazar e ir al estado 138

    $default  reduce usando la regla 99 (resto_lista_expresiones)

    resto_lista_expresiones  ir al estado 195


Estado 173

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    $default  reduce usando la regla 97 (lista_expresiones)

    elemento_vector      ir al estado 81
    exp                  ir al estado 108
    identificador_clase  ir al estado 83
    lista_expresiones    ir al estado 196
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 174

   91 exp: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 91 (exp)


Estado 175

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  100 comparacion: exp TOK_IGUAL exp .

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 100 (comparacion)


Estado 176

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  101 comparacion: exp TOK_DISTINTO exp .

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 101 (comparacion)


Estado 177

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  102 comparacion: exp TOK_MENORIGUAL exp .

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 102 (comparacion)


Estado 178

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  103 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 103 (comparacion)


Estado 179

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  104 comparacion: exp '<' exp .

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 104 (comparacion)


Estado 180

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  105 comparacion: exp '>' exp .

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 105 (comparacion)


Estado 181

   92 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 197


Estado 182

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     desplazar e ir al estado 73
    TOK_CONSTANTE_ENTERA  desplazar e ir al estado 74
    TOK_ITSELF            desplazar e ir al estado 34
    TOK_FALSE             desplazar e ir al estado 76
    TOK_TRUE              desplazar e ir al estado 77
    '-'                   desplazar e ir al estado 78
    '!'                   desplazar e ir al estado 79
    '('                   desplazar e ir al estado 80

    $default  reduce usando la regla 97 (lista_expresiones)

    elemento_vector      ir al estado 81
    exp                  ir al estado 108
    identificador_clase  ir al estado 83
    lista_expresiones    ir al estado 198
    constante            ir al estado 84
    constante_logica     ir al estado 85
    constante_entera     ir al estado 86


Estado 183

   67 condicional: if_exp ')' '{' sentencias '}' .
   68            | if_exp ')' '{' sentencias '}' . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  desplazar e ir al estado 199

    $default  reduce usando la regla 67 (condicional)


Estado 184

   55 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 200


Estado 185

   65 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   desplazar e ir al estado 117
    TOK_AND  desplazar e ir al estado 118
    '+'      desplazar e ir al estado 119
    '-'      desplazar e ir al estado 120
    '*'      desplazar e ir al estado 121
    '/'      desplazar e ir al estado 122

    $default  reduce usando la regla 65 (asignacion)


Estado 186

   43 parametro_funcion: tipo TOK_IDENTIFICADOR .

    $default  reduce usando la regla 43 (parametro_funcion)


Estado 187

   44 parametro_funcion: clase_objeto TOK_IDENTIFICADOR .

    $default  reduce usando la regla 44 (parametro_funcion)


Estado 188

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' . '{' declaraciones_funcion sentencias '}'

    '{'  desplazar e ir al estado 201


Estado 189

   41 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      desplazar e ir al estado 21
    TOK_BOOLEAN  desplazar e ir al estado 22
    '{'          desplazar e ir al estado 24

    tipo               ir al estado 163
    clase_objeto       ir al estado 164
    parametro_funcion  ir al estado 202


Estado 190

   39 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 39 (parametros_funcion)


Estado 191

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' . escribir_fin

    $default  reduce usando la regla 6 (escribir_fin)

    escribir_fin  ir al estado 203


Estado 192

   30 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera . ']'

    ']'  desplazar e ir al estado 204


Estado 193

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' . declaraciones funciones '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    $default  reduce usando la regla 18 (modificadores_acceso)

    declaraciones         ir al estado 205
    declaracion           ir al estado 11
    modificadores_acceso  ir al estado 12


Estado 194

   23 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones . '}'

    '}'  desplazar e ir al estado 206


Estado 195

   98 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce usando la regla 98 (resto_lista_expresiones)


Estado 196

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 207


Estado 197

   92 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 92 (exp)


Estado 198

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  desplazar e ir al estado 208


Estado 199

   68 condicional: if_exp ')' '{' sentencias '}' TOK_ELSE . '{' sentencias '}'

    '{'  desplazar e ir al estado 209


Estado 200

   55 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 55 (sentencia_simple)


Estado 201

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' . declaraciones_funcion sentencias '}'

    TOK_HIDDEN   desplazar e ir al estado 5
    TOK_SECRET   desplazar e ir al estado 6
    TOK_EXPOSED  desplazar e ir al estado 7
    TOK_UNIQUE   desplazar e ir al estado 8

    TOK_CLASS    reduce usando la regla 18 (modificadores_acceso)
    TOK_INT      reduce usando la regla 18 (modificadores_acceso)
    TOK_BOOLEAN  reduce usando la regla 18 (modificadores_acceso)
    TOK_ARRAY    reduce usando la regla 18 (modificadores_acceso)
    '{'          reduce usando la regla 18 (modificadores_acceso)
    $default     reduce usando la regla 46 (declaraciones_funcion)

    declaraciones          ir al estado 210
    declaracion            ir al estado 11
    modificadores_acceso   ir al estado 12
    declaraciones_funcion  ir al estado 211


Estado 202

   41 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  desplazar e ir al estado 189

    $default  reduce usando la regla 42 (resto_parametros_funcion)

    resto_parametros_funcion  ir al estado 212


Estado 203

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin .

    $default  reduce usando la regla 1 (programa)


Estado 204

   30 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']' .

    $default  reduce usando la regla 30 (clase_vector)


Estado 205

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones . funciones '}'

    TOK_FUNCTION  desplazar e ir al estado 9

    $default  reduce usando la regla 34 (funciones)

    funciones  ir al estado 213
    funcion    ir al estado 14


Estado 206

   23 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}' .

    $default  reduce usando la regla 23 (declaracion_clase)


Estado 207

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 64 (asignacion)


Estado 208

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce usando la regla 63 (asignacion)


Estado 209

   68 condicional: if_exp ')' '{' sentencias '}' TOK_ELSE '{' . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 32
    TOK_DISCARD        desplazar e ir al estado 33
    TOK_ITSELF         desplazar e ir al estado 34
    TOK_RETURN         desplazar e ir al estado 35
    TOK_IF             desplazar e ir al estado 36
    TOK_WHILE          desplazar e ir al estado 37
    TOK_SCANF          desplazar e ir al estado 38
    TOK_PRINTF         desplazar e ir al estado 39

    sentencias           ir al estado 214
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    if_exp               ir al estado 48
    bucle                ir al estado 49
    while_exp            ir al estado 50
    while                ir al estado 51
    lectura              ir al estado 52
    escritura            ir al estado 53
    retorno_funcion      ir al estado 54
    identificador_clase  ir al estado 55


Estado 210

   45 declaraciones_funcion: declaraciones .

    $default  reduce usando la regla 45 (declaraciones_funcion)


Estado 211

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion . sentencias '}'

    TOK_IDENTIFICADOR  desplazar e ir al estado 32
    TOK_DISCARD        desplazar e ir al estado 33
    TOK_ITSELF         desplazar e ir al estado 34
    TOK_RETURN         desplazar e ir al estado 35
    TOK_IF             desplazar e ir al estado 36
    TOK_WHILE          desplazar e ir al estado 37
    TOK_SCANF          desplazar e ir al estado 38
    TOK_PRINTF         desplazar e ir al estado 39

    sentencias           ir al estado 215
    sentencia            ir al estado 41
    sentencia_simple     ir al estado 42
    destruir_objeto      ir al estado 43
    bloque               ir al estado 44
    asignacion           ir al estado 45
    elemento_vector      ir al estado 46
    condicional          ir al estado 47
    if_exp               ir al estado 48
    bucle                ir al estado 49
    while_exp            ir al estado 50
    while                ir al estado 51
    lectura              ir al estado 52
    escritura            ir al estado 53
    retorno_funcion      ir al estado 54
    identificador_clase  ir al estado 55


Estado 212

   41 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce usando la regla 41 (resto_parametros_funcion)


Estado 213

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones . '}'

    '}'  desplazar e ir al estado 216


Estado 214

   68 condicional: if_exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias . '}'

    '}'  desplazar e ir al estado 217


Estado 215

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias . '}'

    '}'  desplazar e ir al estado 218


Estado 216

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}' .

    $default  reduce usando la regla 22 (declaracion_clase)


Estado 217

   68 condicional: if_exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}' .

    $default  reduce usando la regla 68 (condicional)


Estado 218

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}' .

    $default  reduce usando la regla 35 (funcion)
