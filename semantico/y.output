Terminals unused in grammar

   TOK_FLECHA
   TOK_ERROR
   TOK_FOR
   TOK_SWITCH
   TOK_CASE
   TOK_DEFAULT
   TOK_FLOAT
   TOK_MALLOC
   TOK_CPRINTF
   TOK_FREE
   TOK_SET
   TOK_OF
   TOK_UNION
   TOK_INTERSECTION
   TOK_ADD
   TOK_CLEAR
   TOK_SIZE
   TOK_CONTAINS
   TOK_CONSTANTE_REAL


Grammar

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin
    2         | TOK_MAIN '{' funciones sentencias '}'

    3 iniciar_codigo: %empty

    4 escribir_variables: %empty

    5 inicio_main: %empty

    6 escribir_fin: %empty

    7 declaraciones: declaracion declaraciones
    8              | declaracion

    9 declaracion: modificadores_acceso clase identificadores ';'
   10            | modificadores_acceso declaracion_clase ';'

   11 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE
   12                     | TOK_SECRET TOK_UNIQUE
   13                     | TOK_EXPOSED TOK_UNIQUE
   14                     | TOK_HIDDEN
   15                     | TOK_SECRET
   16                     | TOK_EXPOSED
   17                     | TOK_UNIQUE
   18                     | %empty

   19 clase: clase_escalar
   20      | clase_vector
   21      | clase_objeto

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   23                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

   24 modificadores_clase: %empty

   25 clase_escalar: tipo

   26 tipo: TOK_INT
   27     | TOK_BOOLEAN

   28 clase_objeto: '{' TOK_IDENTIFICADOR '}'

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ']'
   30             | TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']'

   31 identificadores: identificador
   32                | identificador ',' identificadores

   33 funciones: funcion funciones
   34          | %empty

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

   36 tipo_retorno: TOK_NONE
   37             | tipo
   38             | clase_objeto

   39 parametros_funcion: parametro_funcion resto_parametros_funcion
   40                   | %empty

   41 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   42                         | %empty

   43 parametro_funcion: tipo TOK_IDENTIFICADOR
   44                  | clase_objeto TOK_IDENTIFICADOR

   45 declaraciones_funcion: declaraciones
   46                      | %empty

   47 sentencias: sentencia
   48           | sentencia sentencias

   49 sentencia: sentencia_simple ';'
   50          | bloque

   51 sentencia_simple: asignacion
   52                 | lectura
   53                 | escritura
   54                 | retorno_funcion
   55                 | identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   56                 | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   57                 | destruir_objeto

   58 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR

   59 bloque: condicional
   60       | bucle

   61 asignacion: TOK_IDENTIFICADOR '=' exp
   62           | elemento_vector '=' exp
   63           | elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   64           | TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   65           | identificador_clase '.' TOK_IDENTIFICADOR '=' exp

   66 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   67 condicional: if_exp inicio_if sentencias '}' fin_if
   68            | if_exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

   69 inicio_if: %empty

   70 fin_if: %empty

   71 if_exp: TOK_IF '(' exp ')' '{'

   72 bucle: while_exp sentencias '}'

   73 while_exp: while exp ')' '{'

   74 while: TOK_WHILE '('

   75 lectura: TOK_SCANF TOK_IDENTIFICADOR
   76        | TOK_SCANF elemento_vector

   77 escritura: TOK_PRINTF exp

   78 retorno_funcion: TOK_RETURN exp
   79                | TOK_RETURN TOK_NONE

   80 exp: exp '+' exp
   81    | exp '-' exp
   82    | exp '/' exp
   83    | exp '*' exp
   84    | '-' exp
   85    | exp TOK_AND exp
   86    | exp TOK_OR exp
   87    | '!' exp
   88    | TOK_IDENTIFICADOR
   89    | constante
   90    | '(' exp ')'
   91    | '(' comparacion ')'
   92    | elemento_vector
   93    | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   94    | identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')'
   95    | identificador_clase TOK_IDENTIFICADOR

   96 identificador_clase: TOK_IDENTIFICADOR
   97                    | TOK_ITSELF

   98 lista_expresiones: exp resto_lista_expresiones
   99                  | %empty

  100 resto_lista_expresiones: ',' exp resto_lista_expresiones
  101                        | %empty

  102 comparacion: exp TOK_IGUAL exp
  103            | exp TOK_DISTINTO exp
  104            | exp TOK_MENORIGUAL exp
  105            | exp TOK_MAYORIGUAL exp
  106            | exp '<' exp
  107            | exp '>' exp

  108 constante: constante_logica
  109          | constante_entera

  110 constante_logica: TOK_TRUE
  111                 | TOK_FALSE

  112 constante_entera: TOK_CONSTANTE_ENTERA

  113 identificador: TOK_IDENTIFICADOR


Terminals, with rules where they appear

$end (0) 0
'!' (33) 87
'(' (40) 35 55 56 63 64 71 74 90 91 93 94
')' (41) 35 55 56 63 64 68 71 73 90 91 93 94
'*' (42) 83
'+' (43) 80
',' (44) 30 32 100
'-' (45) 81 84
'.' (46) 55 65
'/' (47) 82
';' (59) 9 10 41 49
'<' (60) 106
'=' (61) 61 62 63 64 65
'>' (62) 107
'[' (91) 29 30 66
']' (93) 29 30 66
'{' (123) 1 2 22 23 28 35 68 71 73
'}' (125) 1 2 22 23 28 35 67 68 72
error (256)
TOK_IDENTIFICADOR (258) 22 23 28 35 43 44 55 56 58 61 63 64 65 66 75
    88 93 94 95 96 113
TOK_CONSTANTE_ENTERA (259) 112
TOK_NONE (260) 36 79
TOK_CLASS (261) 22 23
TOK_INHERITS (262) 22
TOK_INSTANCE_OF (263) 63 64
TOK_DISCARD (264) 58
TOK_ITSELF (265) 97
TOK_FLECHA (266)
TOK_HIDDEN (267) 11 14
TOK_SECRET (268) 12 15
TOK_EXPOSED (269) 13 16
TOK_UNIQUE (270) 11 12 13 17
TOK_FUNCTION (271) 35
TOK_RETURN (272) 78 79
TOK_MAIN (273) 1 2
TOK_INT (274) 26
TOK_BOOLEAN (275) 27
TOK_ARRAY (276) 29 30
TOK_IF (277) 71
TOK_ELSE (278) 68
TOK_WHILE (279) 74
TOK_SCANF (280) 75 76
TOK_PRINTF (281) 77
TOK_IGUAL (282) 102
TOK_DISTINTO (283) 103
TOK_MENORIGUAL (284) 104
TOK_MAYORIGUAL (285) 105
TOK_OR (286) 86
TOK_AND (287) 85
TOK_FALSE (288) 111
TOK_TRUE (289) 110
TOK_ERROR (290)
TOK_FOR (291)
TOK_SWITCH (292)
TOK_CASE (293)
TOK_DEFAULT (294)
TOK_FLOAT (295)
TOK_MALLOC (296)
TOK_CPRINTF (297)
TOK_FREE (298)
TOK_SET (299)
TOK_OF (300)
TOK_UNION (301)
TOK_INTERSECTION (302)
TOK_ADD (303)
TOK_CLEAR (304)
TOK_SIZE (305)
TOK_CONTAINS (306)
TOK_CONSTANTE_REAL (307)
NEG (308)


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
programa (72)
    on left: 1 2, on right: 0
iniciar_codigo (73)
    on left: 3, on right: 1
escribir_variables (74)
    on left: 4, on right: 1
inicio_main (75)
    on left: 5, on right: 1
escribir_fin (76)
    on left: 6, on right: 1
declaraciones (77)
    on left: 7 8, on right: 1 7 22 23 45
declaracion (78)
    on left: 9 10, on right: 7 8
modificadores_acceso (79)
    on left: 11 12 13 14 15 16 17 18, on right: 9 10 35
clase (80)
    on left: 19 20 21, on right: 9
declaracion_clase (81)
    on left: 22 23, on right: 10
modificadores_clase (82)
    on left: 24, on right: 22 23
clase_escalar (83)
    on left: 25, on right: 19
tipo (84)
    on left: 26 27, on right: 25 29 30 37 43
clase_objeto (85)
    on left: 28, on right: 21 38 44
clase_vector (86)
    on left: 29 30, on right: 20
identificadores (87)
    on left: 31 32, on right: 9 22 32
funciones (88)
    on left: 33 34, on right: 1 2 22 23 33
funcion (89)
    on left: 35, on right: 33
tipo_retorno (90)
    on left: 36 37 38, on right: 35
parametros_funcion (91)
    on left: 39 40, on right: 35
resto_parametros_funcion (92)
    on left: 41 42, on right: 39 41
parametro_funcion (93)
    on left: 43 44, on right: 39 41
declaraciones_funcion (94)
    on left: 45 46, on right: 35
sentencias (95)
    on left: 47 48, on right: 1 2 35 48 67 68 72
sentencia (96)
    on left: 49 50, on right: 47 48
sentencia_simple (97)
    on left: 51 52 53 54 55 56 57, on right: 49
destruir_objeto (98)
    on left: 58, on right: 57
bloque (99)
    on left: 59 60, on right: 50
asignacion (100)
    on left: 61 62 63 64 65, on right: 51
elemento_vector (101)
    on left: 66, on right: 62 63 76 92
condicional (102)
    on left: 67 68, on right: 59
inicio_if (103)
    on left: 69, on right: 67
fin_if (104)
    on left: 70, on right: 67
if_exp (105)
    on left: 71, on right: 67 68
bucle (106)
    on left: 72, on right: 60
while_exp (107)
    on left: 73, on right: 72
while (108)
    on left: 74, on right: 73
lectura (109)
    on left: 75 76, on right: 52
escritura (110)
    on left: 77, on right: 53
retorno_funcion (111)
    on left: 78 79, on right: 54
exp (112)
    on left: 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95, on right:
    61 62 65 66 71 73 77 78 80 81 82 83 84 85 86 87 90 98 100 102 103
    104 105 106 107
identificador_clase (113)
    on left: 96 97, on right: 55 65 94 95
lista_expresiones (114)
    on left: 98 99, on right: 55 56 63 64 93 94
resto_lista_expresiones (115)
    on left: 100 101, on right: 98 100
comparacion (116)
    on left: 102 103 104 105 106 107, on right: 91
constante (117)
    on left: 108 109, on right: 89
constante_logica (118)
    on left: 110 111, on right: 108
constante_entera (119)
    on left: 112, on right: 29 30 109
identificador (120)
    on left: 113, on right: 31 32


State 0

    0 $accept: . programa $end

    TOK_MAIN  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: TOK_MAIN . '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin
    2         | TOK_MAIN . '{' funciones sentencias '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 3

    1 programa: TOK_MAIN '{' . declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin
    2         | TOK_MAIN '{' . funciones sentencias '}'

    TOK_HIDDEN    shift, and go to state 5
    TOK_SECRET    shift, and go to state 6
    TOK_EXPOSED   shift, and go to state 7
    TOK_UNIQUE    shift, and go to state 8
    TOK_FUNCTION  shift, and go to state 9

    TOK_CLASS    reduce using rule 18 (modificadores_acceso)
    TOK_INT      reduce using rule 18 (modificadores_acceso)
    TOK_BOOLEAN  reduce using rule 18 (modificadores_acceso)
    TOK_ARRAY    reduce using rule 18 (modificadores_acceso)
    '{'          reduce using rule 18 (modificadores_acceso)
    $default     reduce using rule 34 (funciones)

    declaraciones         go to state 10
    declaracion           go to state 11
    modificadores_acceso  go to state 12
    funciones             go to state 13
    funcion               go to state 14


State 4

    0 $accept: programa $end .

    $default  accept


State 5

   11 modificadores_acceso: TOK_HIDDEN . TOK_UNIQUE
   14                     | TOK_HIDDEN .

    TOK_UNIQUE  shift, and go to state 15

    $default  reduce using rule 14 (modificadores_acceso)


State 6

   12 modificadores_acceso: TOK_SECRET . TOK_UNIQUE
   15                     | TOK_SECRET .

    TOK_UNIQUE  shift, and go to state 16

    $default  reduce using rule 15 (modificadores_acceso)


State 7

   13 modificadores_acceso: TOK_EXPOSED . TOK_UNIQUE
   16                     | TOK_EXPOSED .

    TOK_UNIQUE  shift, and go to state 17

    $default  reduce using rule 16 (modificadores_acceso)


State 8

   17 modificadores_acceso: TOK_UNIQUE .

    $default  reduce using rule 17 (modificadores_acceso)


State 9

   35 funcion: TOK_FUNCTION . modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    $default  reduce using rule 18 (modificadores_acceso)

    modificadores_acceso  go to state 18


State 10

    1 programa: TOK_MAIN '{' declaraciones . iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin

    $default  reduce using rule 3 (iniciar_codigo)

    iniciar_codigo  go to state 19


State 11

    7 declaraciones: declaracion . declaraciones
    8              | declaracion .

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    TOK_CLASS    reduce using rule 18 (modificadores_acceso)
    TOK_INT      reduce using rule 18 (modificadores_acceso)
    TOK_BOOLEAN  reduce using rule 18 (modificadores_acceso)
    TOK_ARRAY    reduce using rule 18 (modificadores_acceso)
    '{'          reduce using rule 18 (modificadores_acceso)
    $default     reduce using rule 8 (declaraciones)

    declaraciones         go to state 20
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 12

    9 declaracion: modificadores_acceso . clase identificadores ';'
   10            | modificadores_acceso . declaracion_clase ';'

    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22
    TOK_ARRAY    shift, and go to state 23
    '{'          shift, and go to state 24

    $default  reduce using rule 24 (modificadores_clase)

    clase                go to state 25
    declaracion_clase    go to state 26
    modificadores_clase  go to state 27
    clase_escalar        go to state 28
    tipo                 go to state 29
    clase_objeto         go to state 30
    clase_vector         go to state 31


State 13

    2 programa: TOK_MAIN '{' funciones . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 40
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    bucle                go to state 49
    while_exp            go to state 50
    while                go to state 51
    lectura              go to state 52
    escritura            go to state 53
    retorno_funcion      go to state 54
    identificador_clase  go to state 55


State 14

   33 funciones: funcion . funciones

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 34 (funciones)

    funciones  go to state 56
    funcion    go to state 14


State 15

   11 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE .

    $default  reduce using rule 11 (modificadores_acceso)


State 16

   12 modificadores_acceso: TOK_SECRET TOK_UNIQUE .

    $default  reduce using rule 12 (modificadores_acceso)


State 17

   13 modificadores_acceso: TOK_EXPOSED TOK_UNIQUE .

    $default  reduce using rule 13 (modificadores_acceso)


State 18

   35 funcion: TOK_FUNCTION modificadores_acceso . tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_NONE     shift, and go to state 57
    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22
    '{'          shift, and go to state 24

    tipo          go to state 58
    clase_objeto  go to state 59
    tipo_retorno  go to state 60


State 19

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo . escribir_variables funciones inicio_main sentencias '}' escribir_fin

    $default  reduce using rule 4 (escribir_variables)

    escribir_variables  go to state 61


State 20

    7 declaraciones: declaracion declaraciones .

    $default  reduce using rule 7 (declaraciones)


State 21

   26 tipo: TOK_INT .

    $default  reduce using rule 26 (tipo)


State 22

   27 tipo: TOK_BOOLEAN .

    $default  reduce using rule 27 (tipo)


State 23

   29 clase_vector: TOK_ARRAY . tipo '[' constante_entera ']'
   30             | TOK_ARRAY . tipo '[' constante_entera ',' constante_entera ']'

    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22

    tipo  go to state 62


State 24

   28 clase_objeto: '{' . TOK_IDENTIFICADOR '}'

    TOK_IDENTIFICADOR  shift, and go to state 63


State 25

    9 declaracion: modificadores_acceso clase . identificadores ';'

    TOK_IDENTIFICADOR  shift, and go to state 64

    identificadores  go to state 65
    identificador    go to state 66


State 26

   10 declaracion: modificadores_acceso declaracion_clase . ';'

    ';'  shift, and go to state 67


State 27

   22 declaracion_clase: modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   23                  | modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_CLASS  shift, and go to state 68


State 28

   19 clase: clase_escalar .

    $default  reduce using rule 19 (clase)


State 29

   25 clase_escalar: tipo .

    $default  reduce using rule 25 (clase_escalar)


State 30

   21 clase: clase_objeto .

    $default  reduce using rule 21 (clase)


State 31

   20 clase: clase_vector .

    $default  reduce using rule 20 (clase)


State 32

   56 sentencia_simple: TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   61 asignacion: TOK_IDENTIFICADOR . '=' exp
   64           | TOK_IDENTIFICADOR . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   66 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   96 identificador_clase: TOK_IDENTIFICADOR .

    '['  shift, and go to state 69
    '('  shift, and go to state 70
    '='  shift, and go to state 71

    $default  reduce using rule 96 (identificador_clase)


State 33

   58 destruir_objeto: TOK_DISCARD . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 72


State 34

   97 identificador_clase: TOK_ITSELF .

    $default  reduce using rule 97 (identificador_clase)


State 35

   78 retorno_funcion: TOK_RETURN . exp
   79                | TOK_RETURN . TOK_NONE

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_NONE              shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 82
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 36

   71 if_exp: TOK_IF . '(' exp ')' '{'

    '('  shift, and go to state 87


State 37

   74 while: TOK_WHILE . '('

    '('  shift, and go to state 88


State 38

   75 lectura: TOK_SCANF . TOK_IDENTIFICADOR
   76        | TOK_SCANF . elemento_vector

    TOK_IDENTIFICADOR  shift, and go to state 89

    elemento_vector  go to state 90


State 39

   77 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 91
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 40

    2 programa: TOK_MAIN '{' funciones sentencias . '}'

    '}'  shift, and go to state 92


State 41

   47 sentencias: sentencia .
   48           | sentencia . sentencias

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    $default  reduce using rule 47 (sentencias)

    sentencias           go to state 93
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    bucle                go to state 49
    while_exp            go to state 50
    while                go to state 51
    lectura              go to state 52
    escritura            go to state 53
    retorno_funcion      go to state 54
    identificador_clase  go to state 55


State 42

   49 sentencia: sentencia_simple . ';'

    ';'  shift, and go to state 94


State 43

   57 sentencia_simple: destruir_objeto .

    $default  reduce using rule 57 (sentencia_simple)


State 44

   50 sentencia: bloque .

    $default  reduce using rule 50 (sentencia)


State 45

   51 sentencia_simple: asignacion .

    $default  reduce using rule 51 (sentencia_simple)


State 46

   62 asignacion: elemento_vector . '=' exp
   63           | elemento_vector . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    '='  shift, and go to state 95


State 47

   59 bloque: condicional .

    $default  reduce using rule 59 (bloque)


State 48

   67 condicional: if_exp . inicio_if sentencias '}' fin_if
   68            | if_exp . ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    ')'  shift, and go to state 96

    $default  reduce using rule 69 (inicio_if)

    inicio_if  go to state 97


State 49

   60 bloque: bucle .

    $default  reduce using rule 60 (bloque)


State 50

   72 bucle: while_exp . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 98
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    bucle                go to state 49
    while_exp            go to state 50
    while                go to state 51
    lectura              go to state 52
    escritura            go to state 53
    retorno_funcion      go to state 54
    identificador_clase  go to state 55


State 51

   73 while_exp: while . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 99
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 52

   52 sentencia_simple: lectura .

    $default  reduce using rule 52 (sentencia_simple)


State 53

   53 sentencia_simple: escritura .

    $default  reduce using rule 53 (sentencia_simple)


State 54

   54 sentencia_simple: retorno_funcion .

    $default  reduce using rule 54 (sentencia_simple)


State 55

   55 sentencia_simple: identificador_clase . '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   65 asignacion: identificador_clase . '.' TOK_IDENTIFICADOR '=' exp

    '.'  shift, and go to state 100


State 56

   33 funciones: funcion funciones .

    $default  reduce using rule 33 (funciones)


State 57

   36 tipo_retorno: TOK_NONE .

    $default  reduce using rule 36 (tipo_retorno)


State 58

   37 tipo_retorno: tipo .

    $default  reduce using rule 37 (tipo_retorno)


State 59

   38 tipo_retorno: clase_objeto .

    $default  reduce using rule 38 (tipo_retorno)


State 60

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno . TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 101


State 61

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables . funciones inicio_main sentencias '}' escribir_fin

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 34 (funciones)

    funciones  go to state 102
    funcion    go to state 14


State 62

   29 clase_vector: TOK_ARRAY tipo . '[' constante_entera ']'
   30             | TOK_ARRAY tipo . '[' constante_entera ',' constante_entera ']'

    '['  shift, and go to state 103


State 63

   28 clase_objeto: '{' TOK_IDENTIFICADOR . '}'

    '}'  shift, and go to state 104


State 64

  113 identificador: TOK_IDENTIFICADOR .

    $default  reduce using rule 113 (identificador)


State 65

    9 declaracion: modificadores_acceso clase identificadores . ';'

    ';'  shift, and go to state 105


State 66

   31 identificadores: identificador .
   32                | identificador . ',' identificadores

    ','  shift, and go to state 106

    $default  reduce using rule 31 (identificadores)


State 67

   10 declaracion: modificadores_acceso declaracion_clase ';' .

    $default  reduce using rule 10 (declaracion)


State 68

   22 declaracion_clase: modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   23                  | modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  shift, and go to state 107


State 69

   66 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 108
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 70

   56 sentencia_simple: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    $default  reduce using rule 99 (lista_expresiones)

    elemento_vector      go to state 81
    exp                  go to state 109
    identificador_clase  go to state 83
    lista_expresiones    go to state 110
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 71

   61 asignacion: TOK_IDENTIFICADOR '=' . exp
   64           | TOK_IDENTIFICADOR '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_INSTANCE_OF       shift, and go to state 111
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 112
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 72

   58 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR .

    $default  reduce using rule 58 (destruir_objeto)


State 73

   66 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   88 exp: TOK_IDENTIFICADOR .
   93    | TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   96 identificador_clase: TOK_IDENTIFICADOR .

    '['  shift, and go to state 69
    '('  shift, and go to state 113

    TOK_IDENTIFICADOR  reduce using rule 96 (identificador_clase)
    $default           reduce using rule 88 (exp)


State 74

  112 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 112 (constante_entera)


State 75

   79 retorno_funcion: TOK_RETURN TOK_NONE .

    $default  reduce using rule 79 (retorno_funcion)


State 76

  111 constante_logica: TOK_FALSE .

    $default  reduce using rule 111 (constante_logica)


State 77

  110 constante_logica: TOK_TRUE .

    $default  reduce using rule 110 (constante_logica)


State 78

   84 exp: '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 114
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 79

   87 exp: '!' . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 115
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 80

   90 exp: '(' . exp ')'
   91    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 116
    identificador_clase  go to state 83
    comparacion          go to state 117
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 81

   92 exp: elemento_vector .

    $default  reduce using rule 92 (exp)


State 82

   78 retorno_funcion: TOK_RETURN exp .
   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 78 (retorno_funcion)


State 83

   94 exp: identificador_clase . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   95    | identificador_clase . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 124


State 84

   89 exp: constante .

    $default  reduce using rule 89 (exp)


State 85

  108 constante: constante_logica .

    $default  reduce using rule 108 (constante)


State 86

  109 constante: constante_entera .

    $default  reduce using rule 109 (constante)


State 87

   71 if_exp: TOK_IF '(' . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 125
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 88

   74 while: TOK_WHILE '(' .

    $default  reduce using rule 74 (while)


State 89

   66 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   75 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    '['  shift, and go to state 69

    $default  reduce using rule 75 (lectura)


State 90

   76 lectura: TOK_SCANF elemento_vector .

    $default  reduce using rule 76 (lectura)


State 91

   77 escritura: TOK_PRINTF exp .
   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 77 (escritura)


State 92

    2 programa: TOK_MAIN '{' funciones sentencias '}' .

    $default  reduce using rule 2 (programa)


State 93

   48 sentencias: sentencia sentencias .

    $default  reduce using rule 48 (sentencias)


State 94

   49 sentencia: sentencia_simple ';' .

    $default  reduce using rule 49 (sentencia)


State 95

   62 asignacion: elemento_vector '=' . exp
   63           | elemento_vector '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_INSTANCE_OF       shift, and go to state 126
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 127
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 96

   68 condicional: if_exp ')' . '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '{'  shift, and go to state 128


State 97

   67 condicional: if_exp inicio_if . sentencias '}' fin_if

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 129
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    bucle                go to state 49
    while_exp            go to state 50
    while                go to state 51
    lectura              go to state 52
    escritura            go to state 53
    retorno_funcion      go to state 54
    identificador_clase  go to state 55


State 98

   72 bucle: while_exp sentencias . '}'

    '}'  shift, and go to state 130


State 99

   73 while_exp: while exp . ')' '{'
   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123
    ')'      shift, and go to state 131


State 100

   55 sentencia_simple: identificador_clase '.' . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   65 asignacion: identificador_clase '.' . TOK_IDENTIFICADOR '=' exp

    TOK_IDENTIFICADOR  shift, and go to state 132


State 101

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR . '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    '('  shift, and go to state 133


State 102

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones . inicio_main sentencias '}' escribir_fin

    $default  reduce using rule 5 (inicio_main)

    inicio_main  go to state 134


State 103

   29 clase_vector: TOK_ARRAY tipo '[' . constante_entera ']'
   30             | TOK_ARRAY tipo '[' . constante_entera ',' constante_entera ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 74

    constante_entera  go to state 135


State 104

   28 clase_objeto: '{' TOK_IDENTIFICADOR '}' .

    $default  reduce using rule 28 (clase_objeto)


State 105

    9 declaracion: modificadores_acceso clase identificadores ';' .

    $default  reduce using rule 9 (declaracion)


State 106

   32 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  shift, and go to state 64

    identificadores  go to state 136
    identificador    go to state 66


State 107

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . TOK_INHERITS identificadores '{' declaraciones funciones '}'
   23                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . '{' declaraciones funciones '}'

    TOK_INHERITS  shift, and go to state 137
    '{'           shift, and go to state 138


State 108

   66 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123
    ']'      shift, and go to state 139


State 109

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
   98 lista_expresiones: exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123
    ','      shift, and go to state 140

    $default  reduce using rule 101 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 141


State 110

   56 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 142


State 111

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  shift, and go to state 143


State 112

   61 asignacion: TOK_IDENTIFICADOR '=' exp .
   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 61 (asignacion)


State 113

   93 exp: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    $default  reduce using rule 99 (lista_expresiones)

    elemento_vector      go to state 81
    exp                  go to state 109
    identificador_clase  go to state 83
    lista_expresiones    go to state 144
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 114

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   84    | '-' exp .
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    $default  reduce using rule 84 (exp)


State 115

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
   87    | '!' exp .

    $default  reduce using rule 87 (exp)


State 116

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
   90    | '(' exp . ')'
  102 comparacion: exp . TOK_IGUAL exp
  103            | exp . TOK_DISTINTO exp
  104            | exp . TOK_MENORIGUAL exp
  105            | exp . TOK_MAYORIGUAL exp
  106            | exp . '<' exp
  107            | exp . '>' exp

    TOK_IGUAL       shift, and go to state 145
    TOK_DISTINTO    shift, and go to state 146
    TOK_MENORIGUAL  shift, and go to state 147
    TOK_MAYORIGUAL  shift, and go to state 148
    TOK_OR          shift, and go to state 118
    TOK_AND         shift, and go to state 119
    '+'             shift, and go to state 120
    '-'             shift, and go to state 121
    '*'             shift, and go to state 122
    '/'             shift, and go to state 123
    ')'             shift, and go to state 149
    '<'             shift, and go to state 150
    '>'             shift, and go to state 151


State 117

   91 exp: '(' comparacion . ')'

    ')'  shift, and go to state 152


State 118

   86 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 153
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 119

   85 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 154
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 120

   80 exp: exp '+' . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 155
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 121

   81 exp: exp '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 156
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 122

   83 exp: exp '*' . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 157
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 123

   82 exp: exp '/' . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 158
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 124

   94 exp: identificador_clase TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   95    | identificador_clase TOK_IDENTIFICADOR .

    '('  shift, and go to state 159

    $default  reduce using rule 95 (exp)


State 125

   71 if_exp: TOK_IF '(' exp . ')' '{'
   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123
    ')'      shift, and go to state 160


State 126

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  shift, and go to state 161


State 127

   62 asignacion: elemento_vector '=' exp .
   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 62 (asignacion)


State 128

   68 condicional: if_exp ')' '{' . sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 162
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    bucle                go to state 49
    while_exp            go to state 50
    while                go to state 51
    lectura              go to state 52
    escritura            go to state 53
    retorno_funcion      go to state 54
    identificador_clase  go to state 55


State 129

   67 condicional: if_exp inicio_if sentencias . '}' fin_if

    '}'  shift, and go to state 163


State 130

   72 bucle: while_exp sentencias '}' .

    $default  reduce using rule 72 (bucle)


State 131

   73 while_exp: while exp ')' . '{'

    '{'  shift, and go to state 164


State 132

   55 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   65 asignacion: identificador_clase '.' TOK_IDENTIFICADOR . '=' exp

    '('  shift, and go to state 165
    '='  shift, and go to state 166


State 133

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' . parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22
    '{'          shift, and go to state 24

    $default  reduce using rule 40 (parametros_funcion)

    tipo                go to state 167
    clase_objeto        go to state 168
    parametros_funcion  go to state 169
    parametro_funcion   go to state 170


State 134

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main . sentencias '}' escribir_fin

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 171
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    bucle                go to state 49
    while_exp            go to state 50
    while                go to state 51
    lectura              go to state 52
    escritura            go to state 53
    retorno_funcion      go to state 54
    identificador_clase  go to state 55


State 135

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera . ']'
   30             | TOK_ARRAY tipo '[' constante_entera . ',' constante_entera ']'

    ']'  shift, and go to state 172
    ','  shift, and go to state 173


State 136

   32 identificadores: identificador ',' identificadores .

    $default  reduce using rule 32 (identificadores)


State 137

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS . identificadores '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  shift, and go to state 64

    identificadores  go to state 174
    identificador    go to state 66


State 138

   23 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' . declaraciones funciones '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    $default  reduce using rule 18 (modificadores_acceso)

    declaraciones         go to state 175
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 139

   66 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce using rule 66 (elemento_vector)


State 140

  100 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 176
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 141

   98 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce using rule 98 (lista_expresiones)


State 142

   56 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 56 (sentencia_simple)


State 143

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  shift, and go to state 177


State 144

   93 exp: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 178


State 145

  102 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 179
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 146

  103 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 180
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 147

  104 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 181
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 148

  105 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 182
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 149

   90 exp: '(' exp ')' .

    $default  reduce using rule 90 (exp)


State 150

  106 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 183
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 151

  107 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 184
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 152

   91 exp: '(' comparacion ')' .

    $default  reduce using rule 91 (exp)


State 153

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
   86    | exp TOK_OR exp .

    TOK_AND  shift, and go to state 119
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 86 (exp)


State 154

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   85    | exp TOK_AND exp .
   86    | exp . TOK_OR exp

    $default  reduce using rule 85 (exp)


State 155

   80 exp: exp . '+' exp
   80    | exp '+' exp .
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 119
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 80 (exp)


State 156

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   81    | exp '-' exp .
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 119
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 81 (exp)


State 157

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   83    | exp '*' exp .
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    $default  reduce using rule 83 (exp)


State 158

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   82    | exp '/' exp .
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    $default  reduce using rule 82 (exp)


State 159

   94 exp: identificador_clase TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    $default  reduce using rule 99 (lista_expresiones)

    elemento_vector      go to state 81
    exp                  go to state 109
    identificador_clase  go to state 83
    lista_expresiones    go to state 185
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 160

   71 if_exp: TOK_IF '(' exp ')' . '{'

    '{'  shift, and go to state 186


State 161

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  shift, and go to state 187


State 162

   68 condicional: if_exp ')' '{' sentencias . '}' TOK_ELSE '{' sentencias '}'

    '}'  shift, and go to state 188


State 163

   67 condicional: if_exp inicio_if sentencias '}' . fin_if

    $default  reduce using rule 70 (fin_if)

    fin_if  go to state 189


State 164

   73 while_exp: while exp ')' '{' .

    $default  reduce using rule 73 (while_exp)


State 165

   55 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    $default  reduce using rule 99 (lista_expresiones)

    elemento_vector      go to state 81
    exp                  go to state 109
    identificador_clase  go to state 83
    lista_expresiones    go to state 190
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 166

   65 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    elemento_vector      go to state 81
    exp                  go to state 191
    identificador_clase  go to state 83
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 167

   43 parametro_funcion: tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 192


State 168

   44 parametro_funcion: clase_objeto . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 193


State 169

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion . ')' '{' declaraciones_funcion sentencias '}'

    ')'  shift, and go to state 194


State 170

   39 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 195

    $default  reduce using rule 42 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 196


State 171

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias . '}' escribir_fin

    '}'  shift, and go to state 197


State 172

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ']' .

    $default  reduce using rule 29 (clase_vector)


State 173

   30 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' . constante_entera ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 74

    constante_entera  go to state 198


State 174

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores . '{' declaraciones funciones '}'

    '{'  shift, and go to state 199


State 175

   23 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones . funciones '}'

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 34 (funciones)

    funciones  go to state 200
    funcion    go to state 14


State 176

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
  100 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123
    ','      shift, and go to state 140

    $default  reduce using rule 101 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 201


State 177

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    $default  reduce using rule 99 (lista_expresiones)

    elemento_vector      go to state 81
    exp                  go to state 109
    identificador_clase  go to state 83
    lista_expresiones    go to state 202
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 178

   93 exp: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 93 (exp)


State 179

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
  102 comparacion: exp TOK_IGUAL exp .

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 102 (comparacion)


State 180

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
  103 comparacion: exp TOK_DISTINTO exp .

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 103 (comparacion)


State 181

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
  104 comparacion: exp TOK_MENORIGUAL exp .

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 104 (comparacion)


State 182

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
  105 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 105 (comparacion)


State 183

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
  106 comparacion: exp '<' exp .

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 106 (comparacion)


State 184

   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp
  107 comparacion: exp '>' exp .

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 107 (comparacion)


State 185

   94 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 203


State 186

   71 if_exp: TOK_IF '(' exp ')' '{' .

    $default  reduce using rule 71 (if_exp)


State 187

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 73
    TOK_CONSTANTE_ENTERA  shift, and go to state 74
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 76
    TOK_TRUE              shift, and go to state 77
    '-'                   shift, and go to state 78
    '!'                   shift, and go to state 79
    '('                   shift, and go to state 80

    $default  reduce using rule 99 (lista_expresiones)

    elemento_vector      go to state 81
    exp                  go to state 109
    identificador_clase  go to state 83
    lista_expresiones    go to state 204
    constante            go to state 84
    constante_logica     go to state 85
    constante_entera     go to state 86


State 188

   68 condicional: if_exp ')' '{' sentencias '}' . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  shift, and go to state 205


State 189

   67 condicional: if_exp inicio_if sentencias '}' fin_if .

    $default  reduce using rule 67 (condicional)


State 190

   55 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 206


State 191

   65 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' exp .
   80 exp: exp . '+' exp
   81    | exp . '-' exp
   82    | exp . '/' exp
   83    | exp . '*' exp
   85    | exp . TOK_AND exp
   86    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 118
    TOK_AND  shift, and go to state 119
    '+'      shift, and go to state 120
    '-'      shift, and go to state 121
    '*'      shift, and go to state 122
    '/'      shift, and go to state 123

    $default  reduce using rule 65 (asignacion)


State 192

   43 parametro_funcion: tipo TOK_IDENTIFICADOR .

    $default  reduce using rule 43 (parametro_funcion)


State 193

   44 parametro_funcion: clase_objeto TOK_IDENTIFICADOR .

    $default  reduce using rule 44 (parametro_funcion)


State 194

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' . '{' declaraciones_funcion sentencias '}'

    '{'  shift, and go to state 207


State 195

   41 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22
    '{'          shift, and go to state 24

    tipo               go to state 167
    clase_objeto       go to state 168
    parametro_funcion  go to state 208


State 196

   39 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 39 (parametros_funcion)


State 197

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' . escribir_fin

    $default  reduce using rule 6 (escribir_fin)

    escribir_fin  go to state 209


State 198

   30 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera . ']'

    ']'  shift, and go to state 210


State 199

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' . declaraciones funciones '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    $default  reduce using rule 18 (modificadores_acceso)

    declaraciones         go to state 211
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 200

   23 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones . '}'

    '}'  shift, and go to state 212


State 201

  100 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce using rule 100 (resto_lista_expresiones)


State 202

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 213


State 203

   94 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 94 (exp)


State 204

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 214


State 205

   68 condicional: if_exp ')' '{' sentencias '}' TOK_ELSE . '{' sentencias '}'

    '{'  shift, and go to state 215


State 206

   55 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 55 (sentencia_simple)


State 207

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' . declaraciones_funcion sentencias '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    TOK_CLASS    reduce using rule 18 (modificadores_acceso)
    TOK_INT      reduce using rule 18 (modificadores_acceso)
    TOK_BOOLEAN  reduce using rule 18 (modificadores_acceso)
    TOK_ARRAY    reduce using rule 18 (modificadores_acceso)
    '{'          reduce using rule 18 (modificadores_acceso)
    $default     reduce using rule 46 (declaraciones_funcion)

    declaraciones          go to state 216
    declaracion            go to state 11
    modificadores_acceso   go to state 12
    declaraciones_funcion  go to state 217


State 208

   41 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 195

    $default  reduce using rule 42 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 218


State 209

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' escribir_fin .

    $default  reduce using rule 1 (programa)


State 210

   30 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']' .

    $default  reduce using rule 30 (clase_vector)


State 211

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones . funciones '}'

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 34 (funciones)

    funciones  go to state 219
    funcion    go to state 14


State 212

   23 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}' .

    $default  reduce using rule 23 (declaracion_clase)


State 213

   64 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 64 (asignacion)


State 214

   63 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 63 (asignacion)


State 215

   68 condicional: if_exp ')' '{' sentencias '}' TOK_ELSE '{' . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 220
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    bucle                go to state 49
    while_exp            go to state 50
    while                go to state 51
    lectura              go to state 52
    escritura            go to state 53
    retorno_funcion      go to state 54
    identificador_clase  go to state 55


State 216

   45 declaraciones_funcion: declaraciones .

    $default  reduce using rule 45 (declaraciones_funcion)


State 217

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 221
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    bucle                go to state 49
    while_exp            go to state 50
    while                go to state 51
    lectura              go to state 52
    escritura            go to state 53
    retorno_funcion      go to state 54
    identificador_clase  go to state 55


State 218

   41 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 41 (resto_parametros_funcion)


State 219

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones . '}'

    '}'  shift, and go to state 222


State 220

   68 condicional: if_exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias . '}'

    '}'  shift, and go to state 223


State 221

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias . '}'

    '}'  shift, and go to state 224


State 222

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}' .

    $default  reduce using rule 22 (declaracion_clase)


State 223

   68 condicional: if_exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}' .

    $default  reduce using rule 68 (condicional)


State 224

   35 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}' .

    $default  reduce using rule 35 (funcion)
