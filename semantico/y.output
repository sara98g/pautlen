Terminals unused in grammar

   TOK_FLECHA
   TOK_ERROR
   TOK_FOR
   TOK_SWITCH
   TOK_CASE
   TOK_DEFAULT
   TOK_FLOAT
   TOK_MALLOC
   TOK_CPRINTF
   TOK_FREE
   TOK_SET
   TOK_OF
   TOK_UNION
   TOK_INTERSECTION
   TOK_ADD
   TOK_CLEAR
   TOK_SIZE
   TOK_CONTAINS
   TOK_CONSTANTE_REAL


Grammar

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}'
    2         | TOK_MAIN '{' funciones sentencias '}'

    3 iniciar_codigo: %empty

    4 escribir_variables: %empty

    5 inicio_main: %empty

    6 declaraciones: declaracion declaraciones
    7              | declaracion

    8 declaracion: modificadores_acceso clase identificadores ';'
    9            | modificadores_acceso declaracion_clase ';'

   10 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE
   11                     | TOK_SECRET TOK_UNIQUE
   12                     | TOK_EXPOSED TOK_UNIQUE
   13                     | TOK_HIDDEN
   14                     | TOK_SECRET
   15                     | TOK_EXPOSED
   16                     | TOK_UNIQUE
   17                     | %empty

   18 clase: clase_escalar
   19      | clase_vector
   20      | clase_objeto

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

   23 modificadores_clase: %empty

   24 clase_escalar: tipo

   25 tipo: TOK_INT
   26     | TOK_BOOLEAN

   27 clase_objeto: '{' TOK_IDENTIFICADOR '}'

   28 clase_vector: TOK_ARRAY tipo '[' constante_entera ']'
   29             | TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']'

   30 identificadores: identificador
   31                | identificador ',' identificadores

   32 funciones: funcion funciones
   33          | %empty

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

   35 tipo_retorno: TOK_NONE
   36             | tipo
   37             | clase_objeto

   38 parametros_funcion: parametro_funcion resto_parametros_funcion
   39                   | %empty

   40 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   41                         | %empty

   42 parametro_funcion: tipo TOK_IDENTIFICADOR
   43                  | clase_objeto TOK_IDENTIFICADOR

   44 declaraciones_funcion: declaraciones
   45                      | %empty

   46 sentencias: sentencia
   47           | sentencia sentencias

   48 sentencia: sentencia_simple ';'
   49          | bloque

   50 sentencia_simple: asignacion
   51                 | lectura
   52                 | escritura
   53                 | retorno_funcion
   54                 | identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   55                 | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   56                 | destruir_objeto

   57 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR

   58 bloque: condicional
   59       | bucle

   60 asignacion: TOK_IDENTIFICADOR '=' exp
   61           | elemento_vector '=' exp
   62           | elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   63           | TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   64           | identificador_clase '.' TOK_IDENTIFICADOR '=' exp

   65 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   66 condicional: if_exp sentencias '}'
   67            | if_exp_sentencias TOK_ELSE '{' sentencias '}'

   68 if_exp: TOK_IF '(' exp ')' '{'

   69 if_exp_sentencias: if_exp sentencias '}'

   70 bucle: while_exp sentencias '}'

   71 while_exp: while exp ')' '{'

   72 while: TOK_WHILE '('

   73 lectura: TOK_SCANF TOK_IDENTIFICADOR
   74        | TOK_SCANF elemento_vector

   75 escritura: TOK_PRINTF exp

   76 retorno_funcion: TOK_RETURN exp
   77                | TOK_RETURN TOK_NONE

   78 exp: exp '+' exp
   79    | exp '-' exp
   80    | exp '/' exp
   81    | exp '*' exp
   82    | '-' exp
   83    | exp TOK_AND exp
   84    | exp TOK_OR exp
   85    | '!' exp
   86    | TOK_IDENTIFICADOR
   87    | constante
   88    | '(' exp ')'
   89    | '(' comparacion ')'
   90    | elemento_vector
   91    | TOK_IDENTIFICADOR '(' lista_expresiones ')'
   92    | identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')'
   93    | identificador_clase TOK_IDENTIFICADOR

   94 identificador_clase: TOK_IDENTIFICADOR
   95                    | TOK_ITSELF

   96 lista_expresiones: exp resto_lista_expresiones
   97                  | %empty

   98 resto_lista_expresiones: ',' exp resto_lista_expresiones
   99                        | %empty

  100 comparacion: exp TOK_IGUAL exp
  101            | exp TOK_DISTINTO exp
  102            | exp TOK_MENORIGUAL exp
  103            | exp TOK_MAYORIGUAL exp
  104            | exp '<' exp
  105            | exp '>' exp

  106 constante: constante_logica
  107          | constante_entera

  108 constante_logica: TOK_TRUE
  109                 | TOK_FALSE

  110 constante_entera: TOK_CONSTANTE_ENTERA

  111 identificador: TOK_IDENTIFICADOR


Terminals, with rules where they appear

$end (0) 0
'!' (33) 85
'(' (40) 34 54 55 62 63 68 72 88 89 91 92
')' (41) 34 54 55 62 63 68 71 88 89 91 92
'*' (42) 81
'+' (43) 78
',' (44) 29 31 98
'-' (45) 79 82
'.' (46) 54 64
'/' (47) 80
';' (59) 8 9 40 48
'<' (60) 104
'=' (61) 60 61 62 63 64
'>' (62) 105
'[' (91) 28 29 65
']' (93) 28 29 65
'{' (123) 1 2 21 22 27 34 67 68 71
'}' (125) 1 2 21 22 27 34 66 67 69 70
error (256)
TOK_IDENTIFICADOR (258) 21 22 27 34 42 43 54 55 57 60 62 63 64 65 73
    86 91 92 93 94 111
TOK_CONSTANTE_ENTERA (259) 110
TOK_NONE (260) 35 77
TOK_CLASS (261) 21 22
TOK_INHERITS (262) 21
TOK_INSTANCE_OF (263) 62 63
TOK_DISCARD (264) 57
TOK_ITSELF (265) 95
TOK_FLECHA (266)
TOK_HIDDEN (267) 10 13
TOK_SECRET (268) 11 14
TOK_EXPOSED (269) 12 15
TOK_UNIQUE (270) 10 11 12 16
TOK_FUNCTION (271) 34
TOK_RETURN (272) 76 77
TOK_MAIN (273) 1 2
TOK_INT (274) 25
TOK_BOOLEAN (275) 26
TOK_ARRAY (276) 28 29
TOK_IF (277) 68
TOK_ELSE (278) 67
TOK_WHILE (279) 72
TOK_SCANF (280) 73 74
TOK_PRINTF (281) 75
TOK_IGUAL (282) 100
TOK_DISTINTO (283) 101
TOK_MENORIGUAL (284) 102
TOK_MAYORIGUAL (285) 103
TOK_OR (286) 84
TOK_AND (287) 83
TOK_FALSE (288) 109
TOK_TRUE (289) 108
TOK_ERROR (290)
TOK_FOR (291)
TOK_SWITCH (292)
TOK_CASE (293)
TOK_DEFAULT (294)
TOK_FLOAT (295)
TOK_MALLOC (296)
TOK_CPRINTF (297)
TOK_FREE (298)
TOK_SET (299)
TOK_OF (300)
TOK_UNION (301)
TOK_INTERSECTION (302)
TOK_ADD (303)
TOK_CLEAR (304)
TOK_SIZE (305)
TOK_CONTAINS (306)
TOK_CONSTANTE_REAL (307)
NEG (308)


Nonterminals, with rules where they appear

$accept (71)
    on left: 0
programa (72)
    on left: 1 2, on right: 0
iniciar_codigo (73)
    on left: 3, on right: 1
escribir_variables (74)
    on left: 4, on right: 1
inicio_main (75)
    on left: 5, on right: 1
declaraciones (76)
    on left: 6 7, on right: 1 6 21 22 44
declaracion (77)
    on left: 8 9, on right: 6 7
modificadores_acceso (78)
    on left: 10 11 12 13 14 15 16 17, on right: 8 9 34
clase (79)
    on left: 18 19 20, on right: 8
declaracion_clase (80)
    on left: 21 22, on right: 9
modificadores_clase (81)
    on left: 23, on right: 21 22
clase_escalar (82)
    on left: 24, on right: 18
tipo (83)
    on left: 25 26, on right: 24 28 29 36 42
clase_objeto (84)
    on left: 27, on right: 20 37 43
clase_vector (85)
    on left: 28 29, on right: 19
identificadores (86)
    on left: 30 31, on right: 8 21 31
funciones (87)
    on left: 32 33, on right: 1 2 21 22 32
funcion (88)
    on left: 34, on right: 32
tipo_retorno (89)
    on left: 35 36 37, on right: 34
parametros_funcion (90)
    on left: 38 39, on right: 34
resto_parametros_funcion (91)
    on left: 40 41, on right: 38 40
parametro_funcion (92)
    on left: 42 43, on right: 38 40
declaraciones_funcion (93)
    on left: 44 45, on right: 34
sentencias (94)
    on left: 46 47, on right: 1 2 34 47 66 67 69 70
sentencia (95)
    on left: 48 49, on right: 46 47
sentencia_simple (96)
    on left: 50 51 52 53 54 55 56, on right: 48
destruir_objeto (97)
    on left: 57, on right: 56
bloque (98)
    on left: 58 59, on right: 49
asignacion (99)
    on left: 60 61 62 63 64, on right: 50
elemento_vector (100)
    on left: 65, on right: 61 62 74 90
condicional (101)
    on left: 66 67, on right: 58
if_exp (102)
    on left: 68, on right: 66 69
if_exp_sentencias (103)
    on left: 69, on right: 67
bucle (104)
    on left: 70, on right: 59
while_exp (105)
    on left: 71, on right: 70
while (106)
    on left: 72, on right: 71
lectura (107)
    on left: 73 74, on right: 51
escritura (108)
    on left: 75, on right: 52
retorno_funcion (109)
    on left: 76 77, on right: 53
exp (110)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93, on right:
    60 61 64 65 68 71 75 76 78 79 80 81 82 83 84 85 88 96 98 100 101
    102 103 104 105
identificador_clase (111)
    on left: 94 95, on right: 54 64 92 93
lista_expresiones (112)
    on left: 96 97, on right: 54 55 62 63 91 92
resto_lista_expresiones (113)
    on left: 98 99, on right: 96 98
comparacion (114)
    on left: 100 101 102 103 104 105, on right: 89
constante (115)
    on left: 106 107, on right: 87
constante_logica (116)
    on left: 108 109, on right: 106
constante_entera (117)
    on left: 110, on right: 28 29 107
identificador (118)
    on left: 111, on right: 30 31


State 0

    0 $accept: . programa $end

    TOK_MAIN  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: TOK_MAIN . '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}'
    2         | TOK_MAIN . '{' funciones sentencias '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 3

    1 programa: TOK_MAIN '{' . declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}'
    2         | TOK_MAIN '{' . funciones sentencias '}'

    TOK_HIDDEN    shift, and go to state 5
    TOK_SECRET    shift, and go to state 6
    TOK_EXPOSED   shift, and go to state 7
    TOK_UNIQUE    shift, and go to state 8
    TOK_FUNCTION  shift, and go to state 9

    TOK_CLASS    reduce using rule 17 (modificadores_acceso)
    TOK_INT      reduce using rule 17 (modificadores_acceso)
    TOK_BOOLEAN  reduce using rule 17 (modificadores_acceso)
    TOK_ARRAY    reduce using rule 17 (modificadores_acceso)
    '{'          reduce using rule 17 (modificadores_acceso)
    $default     reduce using rule 33 (funciones)

    declaraciones         go to state 10
    declaracion           go to state 11
    modificadores_acceso  go to state 12
    funciones             go to state 13
    funcion               go to state 14


State 4

    0 $accept: programa $end .

    $default  accept


State 5

   10 modificadores_acceso: TOK_HIDDEN . TOK_UNIQUE
   13                     | TOK_HIDDEN .

    TOK_UNIQUE  shift, and go to state 15

    $default  reduce using rule 13 (modificadores_acceso)


State 6

   11 modificadores_acceso: TOK_SECRET . TOK_UNIQUE
   14                     | TOK_SECRET .

    TOK_UNIQUE  shift, and go to state 16

    $default  reduce using rule 14 (modificadores_acceso)


State 7

   12 modificadores_acceso: TOK_EXPOSED . TOK_UNIQUE
   15                     | TOK_EXPOSED .

    TOK_UNIQUE  shift, and go to state 17

    $default  reduce using rule 15 (modificadores_acceso)


State 8

   16 modificadores_acceso: TOK_UNIQUE .

    $default  reduce using rule 16 (modificadores_acceso)


State 9

   34 funcion: TOK_FUNCTION . modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    $default  reduce using rule 17 (modificadores_acceso)

    modificadores_acceso  go to state 18


State 10

    1 programa: TOK_MAIN '{' declaraciones . iniciar_codigo escribir_variables funciones inicio_main sentencias '}'

    $default  reduce using rule 3 (iniciar_codigo)

    iniciar_codigo  go to state 19


State 11

    6 declaraciones: declaracion . declaraciones
    7              | declaracion .

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    TOK_CLASS    reduce using rule 17 (modificadores_acceso)
    TOK_INT      reduce using rule 17 (modificadores_acceso)
    TOK_BOOLEAN  reduce using rule 17 (modificadores_acceso)
    TOK_ARRAY    reduce using rule 17 (modificadores_acceso)
    '{'          reduce using rule 17 (modificadores_acceso)
    $default     reduce using rule 7 (declaraciones)

    declaraciones         go to state 20
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 12

    8 declaracion: modificadores_acceso . clase identificadores ';'
    9            | modificadores_acceso . declaracion_clase ';'

    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22
    TOK_ARRAY    shift, and go to state 23
    '{'          shift, and go to state 24

    $default  reduce using rule 23 (modificadores_clase)

    clase                go to state 25
    declaracion_clase    go to state 26
    modificadores_clase  go to state 27
    clase_escalar        go to state 28
    tipo                 go to state 29
    clase_objeto         go to state 30
    clase_vector         go to state 31


State 13

    2 programa: TOK_MAIN '{' funciones . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 40
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    if_exp_sentencias    go to state 49
    bucle                go to state 50
    while_exp            go to state 51
    while                go to state 52
    lectura              go to state 53
    escritura            go to state 54
    retorno_funcion      go to state 55
    identificador_clase  go to state 56


State 14

   32 funciones: funcion . funciones

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 33 (funciones)

    funciones  go to state 57
    funcion    go to state 14


State 15

   10 modificadores_acceso: TOK_HIDDEN TOK_UNIQUE .

    $default  reduce using rule 10 (modificadores_acceso)


State 16

   11 modificadores_acceso: TOK_SECRET TOK_UNIQUE .

    $default  reduce using rule 11 (modificadores_acceso)


State 17

   12 modificadores_acceso: TOK_EXPOSED TOK_UNIQUE .

    $default  reduce using rule 12 (modificadores_acceso)


State 18

   34 funcion: TOK_FUNCTION modificadores_acceso . tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_NONE     shift, and go to state 58
    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22
    '{'          shift, and go to state 24

    tipo          go to state 59
    clase_objeto  go to state 60
    tipo_retorno  go to state 61


State 19

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo . escribir_variables funciones inicio_main sentencias '}'

    $default  reduce using rule 4 (escribir_variables)

    escribir_variables  go to state 62


State 20

    6 declaraciones: declaracion declaraciones .

    $default  reduce using rule 6 (declaraciones)


State 21

   25 tipo: TOK_INT .

    $default  reduce using rule 25 (tipo)


State 22

   26 tipo: TOK_BOOLEAN .

    $default  reduce using rule 26 (tipo)


State 23

   28 clase_vector: TOK_ARRAY . tipo '[' constante_entera ']'
   29             | TOK_ARRAY . tipo '[' constante_entera ',' constante_entera ']'

    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22

    tipo  go to state 63


State 24

   27 clase_objeto: '{' . TOK_IDENTIFICADOR '}'

    TOK_IDENTIFICADOR  shift, and go to state 64


State 25

    8 declaracion: modificadores_acceso clase . identificadores ';'

    TOK_IDENTIFICADOR  shift, and go to state 65

    identificadores  go to state 66
    identificador    go to state 67


State 26

    9 declaracion: modificadores_acceso declaracion_clase . ';'

    ';'  shift, and go to state 68


State 27

   21 declaracion_clase: modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase . TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_CLASS  shift, and go to state 69


State 28

   18 clase: clase_escalar .

    $default  reduce using rule 18 (clase)


State 29

   24 clase_escalar: tipo .

    $default  reduce using rule 24 (clase_escalar)


State 30

   20 clase: clase_objeto .

    $default  reduce using rule 20 (clase)


State 31

   19 clase: clase_vector .

    $default  reduce using rule 19 (clase)


State 32

   55 sentencia_simple: TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   60 asignacion: TOK_IDENTIFICADOR . '=' exp
   63           | TOK_IDENTIFICADOR . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'
   65 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   94 identificador_clase: TOK_IDENTIFICADOR .

    '['  shift, and go to state 70
    '('  shift, and go to state 71
    '='  shift, and go to state 72

    $default  reduce using rule 94 (identificador_clase)


State 33

   57 destruir_objeto: TOK_DISCARD . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 73


State 34

   95 identificador_clase: TOK_ITSELF .

    $default  reduce using rule 95 (identificador_clase)


State 35

   76 retorno_funcion: TOK_RETURN . exp
   77                | TOK_RETURN . TOK_NONE

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_NONE              shift, and go to state 76
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 83
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 36

   68 if_exp: TOK_IF . '(' exp ')' '{'

    '('  shift, and go to state 88


State 37

   72 while: TOK_WHILE . '('

    '('  shift, and go to state 89


State 38

   73 lectura: TOK_SCANF . TOK_IDENTIFICADOR
   74        | TOK_SCANF . elemento_vector

    TOK_IDENTIFICADOR  shift, and go to state 90

    elemento_vector  go to state 91


State 39

   75 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 92
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 40

    2 programa: TOK_MAIN '{' funciones sentencias . '}'

    '}'  shift, and go to state 93


State 41

   46 sentencias: sentencia .
   47           | sentencia . sentencias

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    $default  reduce using rule 46 (sentencias)

    sentencias           go to state 94
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    if_exp_sentencias    go to state 49
    bucle                go to state 50
    while_exp            go to state 51
    while                go to state 52
    lectura              go to state 53
    escritura            go to state 54
    retorno_funcion      go to state 55
    identificador_clase  go to state 56


State 42

   48 sentencia: sentencia_simple . ';'

    ';'  shift, and go to state 95


State 43

   56 sentencia_simple: destruir_objeto .

    $default  reduce using rule 56 (sentencia_simple)


State 44

   49 sentencia: bloque .

    $default  reduce using rule 49 (sentencia)


State 45

   50 sentencia_simple: asignacion .

    $default  reduce using rule 50 (sentencia_simple)


State 46

   61 asignacion: elemento_vector . '=' exp
   62           | elemento_vector . '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    '='  shift, and go to state 96


State 47

   58 bloque: condicional .

    $default  reduce using rule 58 (bloque)


State 48

   66 condicional: if_exp . sentencias '}'
   69 if_exp_sentencias: if_exp . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 97
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    if_exp_sentencias    go to state 49
    bucle                go to state 50
    while_exp            go to state 51
    while                go to state 52
    lectura              go to state 53
    escritura            go to state 54
    retorno_funcion      go to state 55
    identificador_clase  go to state 56


State 49

   67 condicional: if_exp_sentencias . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  shift, and go to state 98


State 50

   59 bloque: bucle .

    $default  reduce using rule 59 (bloque)


State 51

   70 bucle: while_exp . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 99
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    if_exp_sentencias    go to state 49
    bucle                go to state 50
    while_exp            go to state 51
    while                go to state 52
    lectura              go to state 53
    escritura            go to state 54
    retorno_funcion      go to state 55
    identificador_clase  go to state 56


State 52

   71 while_exp: while . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 100
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 53

   51 sentencia_simple: lectura .

    $default  reduce using rule 51 (sentencia_simple)


State 54

   52 sentencia_simple: escritura .

    $default  reduce using rule 52 (sentencia_simple)


State 55

   53 sentencia_simple: retorno_funcion .

    $default  reduce using rule 53 (sentencia_simple)


State 56

   54 sentencia_simple: identificador_clase . '.' TOK_IDENTIFICADOR '(' lista_expresiones ')'
   64 asignacion: identificador_clase . '.' TOK_IDENTIFICADOR '=' exp

    '.'  shift, and go to state 101


State 57

   32 funciones: funcion funciones .

    $default  reduce using rule 32 (funciones)


State 58

   35 tipo_retorno: TOK_NONE .

    $default  reduce using rule 35 (tipo_retorno)


State 59

   36 tipo_retorno: tipo .

    $default  reduce using rule 36 (tipo_retorno)


State 60

   37 tipo_retorno: clase_objeto .

    $default  reduce using rule 37 (tipo_retorno)


State 61

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno . TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 102


State 62

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables . funciones inicio_main sentencias '}'

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 33 (funciones)

    funciones  go to state 103
    funcion    go to state 14


State 63

   28 clase_vector: TOK_ARRAY tipo . '[' constante_entera ']'
   29             | TOK_ARRAY tipo . '[' constante_entera ',' constante_entera ']'

    '['  shift, and go to state 104


State 64

   27 clase_objeto: '{' TOK_IDENTIFICADOR . '}'

    '}'  shift, and go to state 105


State 65

  111 identificador: TOK_IDENTIFICADOR .

    $default  reduce using rule 111 (identificador)


State 66

    8 declaracion: modificadores_acceso clase identificadores . ';'

    ';'  shift, and go to state 106


State 67

   30 identificadores: identificador .
   31                | identificador . ',' identificadores

    ','  shift, and go to state 107

    $default  reduce using rule 30 (identificadores)


State 68

    9 declaracion: modificadores_acceso declaracion_clase ';' .

    $default  reduce using rule 9 (declaracion)


State 69

   21 declaracion_clase: modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase TOK_CLASS . TOK_IDENTIFICADOR '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  shift, and go to state 108


State 70

   65 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 109
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 71

   55 sentencia_simple: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    $default  reduce using rule 97 (lista_expresiones)

    elemento_vector      go to state 82
    exp                  go to state 110
    identificador_clase  go to state 84
    lista_expresiones    go to state 111
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 72

   60 asignacion: TOK_IDENTIFICADOR '=' . exp
   63           | TOK_IDENTIFICADOR '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_INSTANCE_OF       shift, and go to state 112
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 113
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 73

   57 destruir_objeto: TOK_DISCARD TOK_IDENTIFICADOR .

    $default  reduce using rule 57 (destruir_objeto)


State 74

   65 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   86 exp: TOK_IDENTIFICADOR .
   91    | TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   94 identificador_clase: TOK_IDENTIFICADOR .

    '['  shift, and go to state 70
    '('  shift, and go to state 114

    TOK_IDENTIFICADOR  reduce using rule 94 (identificador_clase)
    $default           reduce using rule 86 (exp)


State 75

  110 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 110 (constante_entera)


State 76

   77 retorno_funcion: TOK_RETURN TOK_NONE .

    $default  reduce using rule 77 (retorno_funcion)


State 77

  109 constante_logica: TOK_FALSE .

    $default  reduce using rule 109 (constante_logica)


State 78

  108 constante_logica: TOK_TRUE .

    $default  reduce using rule 108 (constante_logica)


State 79

   82 exp: '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 115
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 80

   85 exp: '!' . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 116
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 81

   88 exp: '(' . exp ')'
   89    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 117
    identificador_clase  go to state 84
    comparacion          go to state 118
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 82

   90 exp: elemento_vector .

    $default  reduce using rule 90 (exp)


State 83

   76 retorno_funcion: TOK_RETURN exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 76 (retorno_funcion)


State 84

   92 exp: identificador_clase . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   93    | identificador_clase . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 125


State 85

   87 exp: constante .

    $default  reduce using rule 87 (exp)


State 86

  106 constante: constante_logica .

    $default  reduce using rule 106 (constante)


State 87

  107 constante: constante_entera .

    $default  reduce using rule 107 (constante)


State 88

   68 if_exp: TOK_IF '(' . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 126
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 89

   72 while: TOK_WHILE '(' .

    $default  reduce using rule 72 (while)


State 90

   65 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   73 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    '['  shift, and go to state 70

    $default  reduce using rule 73 (lectura)


State 91

   74 lectura: TOK_SCANF elemento_vector .

    $default  reduce using rule 74 (lectura)


State 92

   75 escritura: TOK_PRINTF exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 75 (escritura)


State 93

    2 programa: TOK_MAIN '{' funciones sentencias '}' .

    $default  reduce using rule 2 (programa)


State 94

   47 sentencias: sentencia sentencias .

    $default  reduce using rule 47 (sentencias)


State 95

   48 sentencia: sentencia_simple ';' .

    $default  reduce using rule 48 (sentencia)


State 96

   61 asignacion: elemento_vector '=' . exp
   62           | elemento_vector '=' . TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_INSTANCE_OF       shift, and go to state 127
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 128
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 97

   66 condicional: if_exp sentencias . '}'
   69 if_exp_sentencias: if_exp sentencias . '}'

    '}'  shift, and go to state 129


State 98

   67 condicional: if_exp_sentencias TOK_ELSE . '{' sentencias '}'

    '{'  shift, and go to state 130


State 99

   70 bucle: while_exp sentencias . '}'

    '}'  shift, and go to state 131


State 100

   71 while_exp: while exp . ')' '{'
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124
    ')'      shift, and go to state 132


State 101

   54 sentencia_simple: identificador_clase '.' . TOK_IDENTIFICADOR '(' lista_expresiones ')'
   64 asignacion: identificador_clase '.' . TOK_IDENTIFICADOR '=' exp

    TOK_IDENTIFICADOR  shift, and go to state 133


State 102

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR . '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    '('  shift, and go to state 134


State 103

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones . inicio_main sentencias '}'

    $default  reduce using rule 5 (inicio_main)

    inicio_main  go to state 135


State 104

   28 clase_vector: TOK_ARRAY tipo '[' . constante_entera ']'
   29             | TOK_ARRAY tipo '[' . constante_entera ',' constante_entera ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 75

    constante_entera  go to state 136


State 105

   27 clase_objeto: '{' TOK_IDENTIFICADOR '}' .

    $default  reduce using rule 27 (clase_objeto)


State 106

    8 declaracion: modificadores_acceso clase identificadores ';' .

    $default  reduce using rule 8 (declaracion)


State 107

   31 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  shift, and go to state 65

    identificadores  go to state 137
    identificador    go to state 67


State 108

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . TOK_INHERITS identificadores '{' declaraciones funciones '}'
   22                  | modificadores_clase TOK_CLASS TOK_IDENTIFICADOR . '{' declaraciones funciones '}'

    TOK_INHERITS  shift, and go to state 138
    '{'           shift, and go to state 139


State 109

   65 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124
    ']'      shift, and go to state 140


State 110

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   96 lista_expresiones: exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124
    ','      shift, and go to state 141

    $default  reduce using rule 99 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 142


State 111

   55 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 143


State 112

   63 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  shift, and go to state 144


State 113

   60 asignacion: TOK_IDENTIFICADOR '=' exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 60 (asignacion)


State 114

   91 exp: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    $default  reduce using rule 97 (lista_expresiones)

    elemento_vector      go to state 82
    exp                  go to state 110
    identificador_clase  go to state 84
    lista_expresiones    go to state 145
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 115

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   82    | '-' exp .
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    $default  reduce using rule 82 (exp)


State 116

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   85    | '!' exp .

    $default  reduce using rule 85 (exp)


State 117

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   88    | '(' exp . ')'
  100 comparacion: exp . TOK_IGUAL exp
  101            | exp . TOK_DISTINTO exp
  102            | exp . TOK_MENORIGUAL exp
  103            | exp . TOK_MAYORIGUAL exp
  104            | exp . '<' exp
  105            | exp . '>' exp

    TOK_IGUAL       shift, and go to state 146
    TOK_DISTINTO    shift, and go to state 147
    TOK_MENORIGUAL  shift, and go to state 148
    TOK_MAYORIGUAL  shift, and go to state 149
    TOK_OR          shift, and go to state 119
    TOK_AND         shift, and go to state 120
    '+'             shift, and go to state 121
    '-'             shift, and go to state 122
    '*'             shift, and go to state 123
    '/'             shift, and go to state 124
    ')'             shift, and go to state 150
    '<'             shift, and go to state 151
    '>'             shift, and go to state 152


State 118

   89 exp: '(' comparacion . ')'

    ')'  shift, and go to state 153


State 119

   84 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 154
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 120

   83 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 155
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 121

   78 exp: exp '+' . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 156
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 122

   79 exp: exp '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 157
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 123

   81 exp: exp '*' . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 158
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 124

   80 exp: exp '/' . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 159
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 125

   92 exp: identificador_clase TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   93    | identificador_clase TOK_IDENTIFICADOR .

    '('  shift, and go to state 160

    $default  reduce using rule 93 (exp)


State 126

   68 if_exp: TOK_IF '(' exp . ')' '{'
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124
    ')'      shift, and go to state 161


State 127

   62 asignacion: elemento_vector '=' TOK_INSTANCE_OF . TOK_IDENTIFICADOR '(' lista_expresiones ')'

    TOK_IDENTIFICADOR  shift, and go to state 162


State 128

   61 asignacion: elemento_vector '=' exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 61 (asignacion)


State 129

   66 condicional: if_exp sentencias '}' .
   69 if_exp_sentencias: if_exp sentencias '}' .

    TOK_ELSE  reduce using rule 69 (if_exp_sentencias)
    $default  reduce using rule 66 (condicional)


State 130

   67 condicional: if_exp_sentencias TOK_ELSE '{' . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 163
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    if_exp_sentencias    go to state 49
    bucle                go to state 50
    while_exp            go to state 51
    while                go to state 52
    lectura              go to state 53
    escritura            go to state 54
    retorno_funcion      go to state 55
    identificador_clase  go to state 56


State 131

   70 bucle: while_exp sentencias '}' .

    $default  reduce using rule 70 (bucle)


State 132

   71 while_exp: while exp ')' . '{'

    '{'  shift, and go to state 164


State 133

   54 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR . '(' lista_expresiones ')'
   64 asignacion: identificador_clase '.' TOK_IDENTIFICADOR . '=' exp

    '('  shift, and go to state 165
    '='  shift, and go to state 166


State 134

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' . parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22
    '{'          shift, and go to state 24

    $default  reduce using rule 39 (parametros_funcion)

    tipo                go to state 167
    clase_objeto        go to state 168
    parametros_funcion  go to state 169
    parametro_funcion   go to state 170


State 135

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 171
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    if_exp_sentencias    go to state 49
    bucle                go to state 50
    while_exp            go to state 51
    while                go to state 52
    lectura              go to state 53
    escritura            go to state 54
    retorno_funcion      go to state 55
    identificador_clase  go to state 56


State 136

   28 clase_vector: TOK_ARRAY tipo '[' constante_entera . ']'
   29             | TOK_ARRAY tipo '[' constante_entera . ',' constante_entera ']'

    ']'  shift, and go to state 172
    ','  shift, and go to state 173


State 137

   31 identificadores: identificador ',' identificadores .

    $default  reduce using rule 31 (identificadores)


State 138

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS . identificadores '{' declaraciones funciones '}'

    TOK_IDENTIFICADOR  shift, and go to state 65

    identificadores  go to state 174
    identificador    go to state 67


State 139

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' . declaraciones funciones '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    $default  reduce using rule 17 (modificadores_acceso)

    declaraciones         go to state 175
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 140

   65 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce using rule 65 (elemento_vector)


State 141

   98 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 176
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 142

   96 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce using rule 96 (lista_expresiones)


State 143

   55 sentencia_simple: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 55 (sentencia_simple)


State 144

   63 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  shift, and go to state 177


State 145

   91 exp: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 178


State 146

  100 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 179
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 147

  101 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 180
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 148

  102 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 181
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 149

  103 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 182
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 150

   88 exp: '(' exp ')' .

    $default  reduce using rule 88 (exp)


State 151

  104 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 183
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 152

  105 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 184
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 153

   89 exp: '(' comparacion ')' .

    $default  reduce using rule 89 (exp)


State 154

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   84    | exp TOK_OR exp .

    TOK_AND  shift, and go to state 120
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 84 (exp)


State 155

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   83    | exp TOK_AND exp .
   84    | exp . TOK_OR exp

    $default  reduce using rule 83 (exp)


State 156

   78 exp: exp . '+' exp
   78    | exp '+' exp .
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 120
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 78 (exp)


State 157

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   79    | exp '-' exp .
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 120
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 79 (exp)


State 158

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   81    | exp '*' exp .
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    $default  reduce using rule 81 (exp)


State 159

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   80    | exp '/' exp .
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    $default  reduce using rule 80 (exp)


State 160

   92 exp: identificador_clase TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    $default  reduce using rule 97 (lista_expresiones)

    elemento_vector      go to state 82
    exp                  go to state 110
    identificador_clase  go to state 84
    lista_expresiones    go to state 185
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 161

   68 if_exp: TOK_IF '(' exp ')' . '{'

    '{'  shift, and go to state 186


State 162

   62 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '('  shift, and go to state 187


State 163

   67 condicional: if_exp_sentencias TOK_ELSE '{' sentencias . '}'

    '}'  shift, and go to state 188


State 164

   71 while_exp: while exp ')' '{' .

    $default  reduce using rule 71 (while_exp)


State 165

   54 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    $default  reduce using rule 97 (lista_expresiones)

    elemento_vector      go to state 82
    exp                  go to state 110
    identificador_clase  go to state 84
    lista_expresiones    go to state 189
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 166

   64 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    elemento_vector      go to state 82
    exp                  go to state 190
    identificador_clase  go to state 84
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 167

   42 parametro_funcion: tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 191


State 168

   43 parametro_funcion: clase_objeto . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 192


State 169

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion . ')' '{' declaraciones_funcion sentencias '}'

    ')'  shift, and go to state 193


State 170

   38 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 194

    $default  reduce using rule 41 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 195


State 171

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias . '}'

    '}'  shift, and go to state 196


State 172

   28 clase_vector: TOK_ARRAY tipo '[' constante_entera ']' .

    $default  reduce using rule 28 (clase_vector)


State 173

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' . constante_entera ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 75

    constante_entera  go to state 197


State 174

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores . '{' declaraciones funciones '}'

    '{'  shift, and go to state 198


State 175

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones . funciones '}'

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 33 (funciones)

    funciones  go to state 199
    funcion    go to state 14


State 176

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
   98 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124
    ','      shift, and go to state 141

    $default  reduce using rule 99 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 200


State 177

   63 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    $default  reduce using rule 97 (lista_expresiones)

    elemento_vector      go to state 82
    exp                  go to state 110
    identificador_clase  go to state 84
    lista_expresiones    go to state 201
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 178

   91 exp: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 91 (exp)


State 179

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  100 comparacion: exp TOK_IGUAL exp .

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 100 (comparacion)


State 180

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  101 comparacion: exp TOK_DISTINTO exp .

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 101 (comparacion)


State 181

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  102 comparacion: exp TOK_MENORIGUAL exp .

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 102 (comparacion)


State 182

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  103 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 103 (comparacion)


State 183

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  104 comparacion: exp '<' exp .

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 104 (comparacion)


State 184

   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp
  105 comparacion: exp '>' exp .

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 105 (comparacion)


State 185

   92 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 202


State 186

   68 if_exp: TOK_IF '(' exp ')' '{' .

    $default  reduce using rule 68 (if_exp)


State 187

   62 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 74
    TOK_CONSTANTE_ENTERA  shift, and go to state 75
    TOK_ITSELF            shift, and go to state 34
    TOK_FALSE             shift, and go to state 77
    TOK_TRUE              shift, and go to state 78
    '-'                   shift, and go to state 79
    '!'                   shift, and go to state 80
    '('                   shift, and go to state 81

    $default  reduce using rule 97 (lista_expresiones)

    elemento_vector      go to state 82
    exp                  go to state 110
    identificador_clase  go to state 84
    lista_expresiones    go to state 203
    constante            go to state 85
    constante_logica     go to state 86
    constante_entera     go to state 87


State 188

   67 condicional: if_exp_sentencias TOK_ELSE '{' sentencias '}' .

    $default  reduce using rule 67 (condicional)


State 189

   54 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 204


State 190

   64 asignacion: identificador_clase '.' TOK_IDENTIFICADOR '=' exp .
   78 exp: exp . '+' exp
   79    | exp . '-' exp
   80    | exp . '/' exp
   81    | exp . '*' exp
   83    | exp . TOK_AND exp
   84    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 119
    TOK_AND  shift, and go to state 120
    '+'      shift, and go to state 121
    '-'      shift, and go to state 122
    '*'      shift, and go to state 123
    '/'      shift, and go to state 124

    $default  reduce using rule 64 (asignacion)


State 191

   42 parametro_funcion: tipo TOK_IDENTIFICADOR .

    $default  reduce using rule 42 (parametro_funcion)


State 192

   43 parametro_funcion: clase_objeto TOK_IDENTIFICADOR .

    $default  reduce using rule 43 (parametro_funcion)


State 193

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' . '{' declaraciones_funcion sentencias '}'

    '{'  shift, and go to state 205


State 194

   40 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      shift, and go to state 21
    TOK_BOOLEAN  shift, and go to state 22
    '{'          shift, and go to state 24

    tipo               go to state 167
    clase_objeto       go to state 168
    parametro_funcion  go to state 206


State 195

   38 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 38 (parametros_funcion)


State 196

    1 programa: TOK_MAIN '{' declaraciones iniciar_codigo escribir_variables funciones inicio_main sentencias '}' .

    $default  reduce using rule 1 (programa)


State 197

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera . ']'

    ']'  shift, and go to state 207


State 198

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' . declaraciones funciones '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    $default  reduce using rule 17 (modificadores_acceso)

    declaraciones         go to state 208
    declaracion           go to state 11
    modificadores_acceso  go to state 12


State 199

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones . '}'

    '}'  shift, and go to state 209


State 200

   98 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce using rule 98 (resto_lista_expresiones)


State 201

   63 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 210


State 202

   92 exp: identificador_clase TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 92 (exp)


State 203

   62 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 211


State 204

   54 sentencia_simple: identificador_clase '.' TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 54 (sentencia_simple)


State 205

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' . declaraciones_funcion sentencias '}'

    TOK_HIDDEN   shift, and go to state 5
    TOK_SECRET   shift, and go to state 6
    TOK_EXPOSED  shift, and go to state 7
    TOK_UNIQUE   shift, and go to state 8

    TOK_CLASS    reduce using rule 17 (modificadores_acceso)
    TOK_INT      reduce using rule 17 (modificadores_acceso)
    TOK_BOOLEAN  reduce using rule 17 (modificadores_acceso)
    TOK_ARRAY    reduce using rule 17 (modificadores_acceso)
    '{'          reduce using rule 17 (modificadores_acceso)
    $default     reduce using rule 45 (declaraciones_funcion)

    declaraciones          go to state 212
    declaracion            go to state 11
    modificadores_acceso   go to state 12
    declaraciones_funcion  go to state 213


State 206

   40 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 194

    $default  reduce using rule 41 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 214


State 207

   29 clase_vector: TOK_ARRAY tipo '[' constante_entera ',' constante_entera ']' .

    $default  reduce using rule 29 (clase_vector)


State 208

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones . funciones '}'

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 33 (funciones)

    funciones  go to state 215
    funcion    go to state 14


State 209

   22 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR '{' declaraciones funciones '}' .

    $default  reduce using rule 22 (declaracion_clase)


State 210

   63 asignacion: TOK_IDENTIFICADOR '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 63 (asignacion)


State 211

   62 asignacion: elemento_vector '=' TOK_INSTANCE_OF TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 62 (asignacion)


State 212

   44 declaraciones_funcion: declaraciones .

    $default  reduce using rule 44 (declaraciones_funcion)


State 213

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 32
    TOK_DISCARD        shift, and go to state 33
    TOK_ITSELF         shift, and go to state 34
    TOK_RETURN         shift, and go to state 35
    TOK_IF             shift, and go to state 36
    TOK_WHILE          shift, and go to state 37
    TOK_SCANF          shift, and go to state 38
    TOK_PRINTF         shift, and go to state 39

    sentencias           go to state 216
    sentencia            go to state 41
    sentencia_simple     go to state 42
    destruir_objeto      go to state 43
    bloque               go to state 44
    asignacion           go to state 45
    elemento_vector      go to state 46
    condicional          go to state 47
    if_exp               go to state 48
    if_exp_sentencias    go to state 49
    bucle                go to state 50
    while_exp            go to state 51
    while                go to state 52
    lectura              go to state 53
    escritura            go to state 54
    retorno_funcion      go to state 55
    identificador_clase  go to state 56


State 214

   40 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 40 (resto_parametros_funcion)


State 215

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones . '}'

    '}'  shift, and go to state 217


State 216

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias . '}'

    '}'  shift, and go to state 218


State 217

   21 declaracion_clase: modificadores_clase TOK_CLASS TOK_IDENTIFICADOR TOK_INHERITS identificadores '{' declaraciones funciones '}' .

    $default  reduce using rule 21 (declaracion_clase)


State 218

   34 funcion: TOK_FUNCTION modificadores_acceso tipo_retorno TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}' .

    $default  reduce using rule 34 (funcion)
